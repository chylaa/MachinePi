<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MaszynaPi</name>
    </assembly>
    <members>
        <member name="T:MaszynaPi.Logger.Logger">
            <summary>
            Custom logging class, created for development purposes, currently not used. All fields and methods are commented due to projects' finalization. 
            </summary>
        </member>
        <member name="T:MaszynaPi.CommonOperations.Arithmetic">
            <summary> Static class providing methods for base arithmetic calculations. </summary>
        </member>
        <member name="M:MaszynaPi.CommonOperations.Arithmetic.PowersDifference(System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Calculates difference between two numbers represented as of <paramref name="base"/> (default 2) to given exponent.
            </summary>
            <param name="exp1">Exponent of minuend.</param>
            <param name="exp2">Exponent of subtrahend.</param>
            <param name="base">Power base for both numbers (default 2).</param>
            <returns>Integer-casted result of (<paramref name="base"/>^<paramref name="exp1"/> - <paramref name="base"/>^<paramref name="exp2"/>) subtraction.</returns>
        </member>
        <member name="T:MaszynaPi.CommonOperations.Bitwise">
            <summary> Static class providing methods for base bitwise calculations. </summary>
        </member>
        <member name="M:MaszynaPi.CommonOperations.Bitwise.GetBitsAmount(System.Int32)">
            <summary> Returns min amout of bits that are required to represent number as binary.</summary>
            <param name="number"></param>
            <returns></returns>
        </member>
        <member name="M:MaszynaPi.CommonOperations.Bitwise.IsSignBitSet(System.UInt32,System.UInt32)">
            <summary>Checks if most significant bit of <paramref name="value"/> (pointed by <paramref name="numberBitsize"/>) is set.</summary>
            <param name="value">InstructionValue to check.</param>
            <param name="numberBitsize">Requested <paramref name="value"/> size in bits.</param>
            <returns>True if MSB of <paramref name="value"/> as <paramref name="numberBitsize"/>-bit number is set, false otherwise.</returns>
        </member>
        <member name="M:MaszynaPi.CommonOperations.Bitwise.ConvertToSigned(System.UInt32,System.UInt32)">
            <summary>
            Converts passed <paramref name="value"/> to signed <see cref="T:System.Int32"/> base on most significant bit 
            pointed by <paramref name="numberBitsize"/>.
            </summary>
            <param name="value">InstructionValue to convert</param>
            <param name="numberBitsize">Requested <paramref name="value"/> size in bits.</param>
            <returns>Sign-extended, max <see cref="T:System.Int32"/> value</returns>
        </member>
        <member name="M:MaszynaPi.CommonOperations.Bitwise.CreateBitMask(System.UInt32,System.UInt32,System.Boolean)">
            <summary>Creates unsigned number to act like bitmask with requested bits set. </summary>
            <param name="noOfZeroes">Number of consecutive '0' bits.</param>
            <param name="noOfOnes">Number of consecutive '1' bits.</param>
            <param name="zeroesFirst">If set to true (default), indicates that zero-bits should begin from MSB position.</param>
            <returns>Unsigned value which bits are set as requested.</returns>
        </member>
        <member name="M:MaszynaPi.CommonOperations.Bitwise.HandleOverflow(System.UInt32,System.UInt32)">
            <summary>
            Simulates <paramref name="value"/> overflow based on provided 'virtual' <paramref name="bitsize"/>.
            If <paramref name="bitsize"/> == 0, overflow is based on <see cref="M:MaszynaPi.MachineLogic.ArchitectureSettings.GetMaxWord"/>.
            </summary>
            <param name="value">InstructionValue that can potentially overflow if it would habe <paramref name="bitsize"/> bits.</param>
            <param name="bitsize">Virtual <paramref name="value"/> size in bit.</param>
            <returns>Original <paramref name="value"/> if it would not overflow when having <paramref name="bitsize"/>, overflown value otherwise.</returns>
        </member>
        <member name="M:MaszynaPi.CommonOperations.Bitwise.DecodeIntructionArgument(System.UInt32)">
            <summary>Extracts argumet (address) component of passed <paramref name="InstructionValue"/> base on <see cref="T:MaszynaPi.MachineLogic.ArchitectureSettings"/>.</summary>
            <param name="InstructionValue">InstructionValue representing CPU instruction.</param>
            <returns>Argument (address) component of passed <paramref name="InstructionValue"/>.</returns>
        </member>
        <member name="M:MaszynaPi.CommonOperations.Bitwise.DecodeInstructionOpcode(System.UInt32)">
            <summary>Extracts opcode component of passed <paramref name="InstructionValue"/> base on <see cref="T:MaszynaPi.MachineLogic.ArchitectureSettings"/>.</summary>
            <param name="InstructionValue">InstructionValue representing CPU instruction.</param>
            <returns>Opcode of passed <paramref name="InstructionValue"/>.</returns>
        </member>
        <member name="M:MaszynaPi.CommonOperations.Bitwise.EncodeInstruction(System.UInt32,System.UInt32)">
            <summary>
            Creates valid CPU instruction from <paramref name="opcode"/> and <paramref name="argument"/> components 
            base on <see cref="T:MaszynaPi.MachineLogic.ArchitectureSettings"/>.
            </summary>
            <param name="opcode">Opcode component of instruction value.</param>
            <param name="argument">Argument (address) component of instruction value.</param>
            <returns>New CPU instruction value containing <paramref name="opcode"/> and address <paramref name="argument"/>.</returns>
        </member>
        <member name="T:MaszynaPi.FilesHandling.FileHandlerException">
            <summary> General exception of <see cref="T:MaszynaPi.FilesHandling.FilesHandler"/> class </summary>
        </member>
        <member name="T:MaszynaPi.FilesHandling.FilesHandler">
            <summary>Static class providing methods for handling displaing specific <see cref="T:System.Windows.Forms.FileDialog"/> to user.</summary>
        </member>
        <member name="M:MaszynaPi.FilesHandling.FilesHandler.ValidDirOrCurrent(System.String)">
            <summary>
            Base on <paramref name="filepath"/> parameter, returns its <see cref="T:System.IO.Directory"/> 
            component if it is valid path, or current working directory.
            </summary>
            <param name="filepath">Potential path to file </param>
            <returns><see cref="T:System.IO.Directory"/> component of <paramref name="filepath"/> if exist, current working directory otherwise.</returns>
        </member>
        <member name="M:MaszynaPi.FilesHandling.FilesHandler.PointFileAndGetPath(System.String,System.String,System.String@)">
            <summary>Opens <see cref="T:System.Windows.Forms.OpenFileDialog"/> with passed <paramref name="dialogFilter"/> and assign path of selected file to <paramref name="filepath"/>.</summary>
            <param name="dialogFilter"><see cref="T:System.Windows.Forms.OpenFileDialog"/> filter string.</param>
            <param name="initDir">Initial for <see cref="T:System.Windows.Forms.OpenFileDialog"/>.</param>
            <param name="filepath">Output parameter which will store path to pointed file or <see cref="F:System.String.Empty"/> if no file selected.</param>
            <returns>true if file was selected, false otherwise.</returns>
        </member>
        <member name="M:MaszynaPi.FilesHandling.FilesHandler.PointToOvervriteFileOrCreateNew(System.String,System.String,System.String@)">
            <summary>Allows to get filepath from user using <see cref="T:System.Windows.Forms.SaveFileDialog"/>. Path of file is assigned to <paramref name="filepath"/> param.</summary>
            <param name="dialogFilter"><see cref="T:System.Windows.Forms.SaveFileDialog"/> filter string.</param>
            <param name="initDir">Initial for <see cref="T:System.Windows.Forms.SaveFileDialog"/>.</param>
            <param name="filepath">Output parameter which will store path to pointed file or <see cref="F:System.String.Empty"/> if no file selected.</param>
            <returns>true if file to save was selected, false otherwise.</returns>
        </member>
        <member name="M:MaszynaPi.FilesHandling.FilesHandler.OverwriteOrCreateFile(System.Object,System.String)">
            <summary>Creates or overwrites file pointed by <paramref name="filepath"/> with <paramref name="content"/>.</summary>
            <param name="content">Data to write to file. <see cref="T:System.String"/> and <see cref="T:System.Collections.Generic.List`1"/> are supproted.</param>
            <param name="filepath">Path to file to be written.</param>
            <exception cref="T:MaszynaPi.FilesHandling.FileHandlerException"></exception>
        </member>
        <member name="M:MaszynaPi.FilesHandling.FilesHandler.RemoveExcessiveEmptyStrings(System.Collections.Generic.List{System.String})">
            <summary>
            Removes one empty string between each string of len greater than 0 (if exist) (leftovers from code-to-List processing on win) 
            <br></br>["xx","","yy","","","zz"] -> ["xx","yy","","zz"]<br></br>
            </summary>
            <param name="lines">List to process</param>
            <returns>New instance of wihout newline-split empty strings.</returns>
        </member>
        <member name="M:MaszynaPi.FilesHandling.FilesHandler.PointFileAndGetText(System.String,System.String,System.String@,System.String@)">
            <summary>
            Calls <see cref="M:MaszynaPi.FilesHandling.FilesHandler.PointFileAndGetPath(System.String,System.String,System.String@)"/> with <paramref name="dialogFilter"/> and <paramref name="filepath"/> 
            and retreives content of that file into <paramref name="fileContent"/> output variable.
            </summary>
            <param name="dialogFilter"><see cref="T:System.Windows.Forms.SaveFileDialog"/> filter string.</param>
            <param name="lastfile">Path to last pointed file. If null, current working directory used.</param>
            <param name="filepath">Output parameter which will store path to pointed file or <see cref="F:System.String.Empty"/> if no file selected.</param>
            <param name="fileContent">Output variable for read file content.</param>
            <returns>true if file was read properly, false otherwise.</returns>
            <exception cref="T:MaszynaPi.FilesHandling.FileHandlerException"></exception>
        </member>
        <member name="M:MaszynaPi.FilesHandling.FilesHandler.GetFileText(System.String)">
            <summary>Reads whole contents of file under given <paramref name="filepath"/>/</summary>
            <param name="filepath"></param>
            <returns>Content read by <see cref="M:System.IO.File.ReadAllText(System.String,System.Text.Encoding)"/></returns>
            <exception cref="T:MaszynaPi.FilesHandling.FileHandlerException"></exception>
        </member>
        <member name="M:MaszynaPi.FilesHandling.FilesHandler.GetEncoding(System.String,System.Text.Encoding)">
            <summary>
            Determines a text file's encoding by analyzing its byte order mark (BOM).<br></br>
            Defaults set by "defaultEncoding" param when detection of the text file's endianness fails.
            <br></br> Supprots:
            <br></br>- <see cref="P:System.Text.Encoding.UTF7"/>
            <br></br>- <see cref="P:System.Text.Encoding.UTF8"/>
            <br></br>- <see cref="P:System.Text.Encoding.UTF32"/>
            <br></br>- <see cref="P:System.Text.Encoding.Unicode"/>
            <br></br>- <see cref="P:System.Text.Encoding.BigEndianUnicode"/>
            <br></br>- <see cref="M:System.Text.UTF32Encoding.#ctor(System.Boolean,System.Boolean)"/>
            </summary>
            <param name="filename">Path pointing to file which encoding should be get.</param>
            <param name="defaultEncoding">Encoding that should be assumed if file is saved with none of known encodings.</param>
            <returns>Detected <see cref="T:System.Text.Encoding"/> object.</returns>
        </member>
        <member name="T:MaszynaPi.MachineLogic.Architecture.InterruptionController">
            <summary>
            Class represents <see cref="T:MaszynaPi.MachineLogic.CentralProcessingUnit"/>'s component, called Interruption Controller.
            This unit performs all neccessary operations related to handling incoming/pending interrupts
            from diferent sources.
            </summary>
        </member>
        <member name="F:MaszynaPi.MachineLogic.Architecture.InterruptionController.RZ">
            <summary>CPU's 4 bit Interrupt Report Register.</summary>
        </member>
        <member name="F:MaszynaPi.MachineLogic.Architecture.InterruptionController.RM">
            <summary>CPU's 4 bit Mask Register.</summary>
        </member>
        <member name="F:MaszynaPi.MachineLogic.Architecture.InterruptionController.RP">
            <summary>CPU's 4 bit Register of accepted interrupts.</summary>
        </member>
        <member name="F:MaszynaPi.MachineLogic.Architecture.InterruptionController.AP">
            <summary>CPU's Interrupt Vector Register (<see cref="F:MaszynaPi.MachineLogic.ArchitectureSettings.CodeBits"/>) bit size).</summary>
        </member>
        <member name="F:MaszynaPi.MachineLogic.Architecture.InterruptionController.INTJoystick">
            <summary> Sense-Hat joystick as optional, additional source of interrupts.</summary>
        </member>
        <member name="M:MaszynaPi.MachineLogic.Architecture.InterruptionController.#ctor(MaszynaPi.MachineLogic.Architecture.Register,MaszynaPi.MachineLogic.Architecture.Register,MaszynaPi.MachineLogic.Architecture.Register,MaszynaPi.MachineLogic.Architecture.Register)">
            <summary>Creates new interrupts controller instance.</summary>
            <param name="rz">Handle to Interrupt Report Register</param>
            <param name="rm">Handle to Mask Register</param>
            <param name="rp">Handle to Register of accepted interrupts</param>
            <param name="ap">Handle to Interrupt Vector Register </param>
        </member>
        <member name="F:MaszynaPi.MachineLogic.Architecture.InterruptionController.OnInterruptReported">
            <summary> Action delegate invoked when new interruption is repored.</summary>
        </member>
        <member name="M:MaszynaPi.MachineLogic.Architecture.InterruptionController.ReportInterrupt(System.UInt32)">
            <summary>
            Reports new interrupt of given <paramref name="IntPriority"/> by setting 
            corresponding bit of Interrupt Report register (<see cref="F:MaszynaPi.MachineLogic.Architecture.InterruptionController.RZ"/>).
            </summary>
            <param name="IntPriority">Interruption priority as appropriate power of 2 ([1/2/4/8]).</param>
        </member>
        <member name="M:MaszynaPi.MachineLogic.Architecture.InterruptionController.SetAcceptedAndINTVectorRegister(MaszynaPi.MachineLogic.Architecture.ArithmeticLogicUnit)">
            <summary>
            Sets values of Accepted INT register and INT vector register (<see cref="F:MaszynaPi.MachineLogic.Architecture.InterruptionController.RP"/>, <see cref="F:MaszynaPi.MachineLogic.Architecture.InterruptionController.AP"/>) base on
            values of reported interrupts and mask registers (<see cref="F:MaszynaPi.MachineLogic.Architecture.InterruptionController.RM"/>, <see cref="F:MaszynaPi.MachineLogic.Architecture.InterruptionController.RZ"/>).<br></br>
            Interrupt bit with the highest priority that is not masked, is put in the <see cref="F:MaszynaPi.MachineLogic.Architecture.InterruptionController.RP"/>
            and points to address of interrupt handle which is set as new <see cref="F:MaszynaPi.MachineLogic.Architecture.InterruptionController.AP"/> register value.<br></br>
            Sets <see cref="F:MaszynaPi.MachineLogic.Architecture.ALUFlags.INT"/> flag of <see cref="F:MaszynaPi.MachineLogic.Architecture.ArithmeticLogicUnit.Flags"/> if any interrupt 
            is accepted.
            </summary>
            <param name="JAL">Handle to CPU's <see cref="T:MaszynaPi.MachineLogic.Architecture.ArithmeticLogicUnit"/> instance.</param>
        </member>
        <member name="M:MaszynaPi.MachineLogic.Architecture.InterruptionController.ClearMSBOfAcceptedINTs">
            <summary>Clears bits related to accepted interrupt from <see cref="T:MaszynaPi.MachineLogic.Architecture.InterruptionController"/> registers.</summary>
        </member>
        <member name="M:MaszynaPi.MachineLogic.Architecture.InterruptionController.StopJoystickInterruptionMonitor">
            <summary>Sends signal to terminates async proccess of reading <see cref="F:MaszynaPi.MachineLogic.Architecture.InterruptionController.INTJoystick"/> state as source of interrupts.</summary>
        </member>
        <member name="M:MaszynaPi.MachineLogic.Architecture.InterruptionController.StartJoystickInterruptionMonitor">
            <summary>Starts async process of reading <see cref="F:MaszynaPi.MachineLogic.Architecture.InterruptionController.INTJoystick"/> state as source of interrupts.</summary>
        </member>
        <member name="T:MaszynaPi.MachineLogic.Architecture.IODevicesController">
            <summary>
            Class representing input/output devices controller, providing 
            <see cref="M:MaszynaPi.MachineLogic.Architecture.IODevicesController.HandleIOOnStartSignal(System.UInt32)"/> method for writing/reading data
            to/from particular <see cref="T:MaszynaPi.MachineLogic.IODevices.IODevice"/>.
            </summary>
        </member>
        <member name="M:MaszynaPi.MachineLogic.Architecture.IODevicesController.#ctor(MaszynaPi.MachineLogic.IODevices.IODevice[])">
            <summary>
            Creates new <see cref="T:MaszynaPi.MachineLogic.Architecture.IODevicesController"/> with internal set of passed IO <paramref name="devices"/>.
            </summary>
            <param name="devices">Collection of available <see cref="T:MaszynaPi.MachineLogic.IODevices.IODevice"/> instances.</param>
        </member>
        <member name="M:MaszynaPi.MachineLogic.Architecture.IODevicesController.HandleIOOnStartSignal(System.UInt32)">
            <summary>
            Invokes read/write IO buffer operation of <see cref="T:MaszynaPi.MachineLogic.IODevices.IODevice"/>, 
            visible under IO address <paramref name="IOAddress"/> 
            (I/O base on <see cref="T:MaszynaPi.MachineLogic.IODevices.IOType"/> of assosciated <see cref="T:MaszynaPi.MachineLogic.IODevices.IODevice"/>).
            </summary>
            <param name="IOAddress">Address of <see cref="T:MaszynaPi.MachineLogic.IODevices.IODevice"/> from IO read/write instruction.</param>
        </member>
        <member name="T:MaszynaPi.MachineLogic.Architecture.ALUFlags">
            <summary>Supported flags bits of Flag Register of Arithmetic Logic Unit.</summary>
        </member>
        <member name="F:MaszynaPi.MachineLogic.Architecture.ALUFlags.Z">
            <summary>Sign bit (MSB) in accumulator register is set to 1 (negative value).</summary>
        </member>
        <member name="F:MaszynaPi.MachineLogic.Architecture.ALUFlags.V">
            <summary>Not used</summary>
        </member>
        <member name="F:MaszynaPi.MachineLogic.Architecture.ALUFlags.INT">
            <summary>Interruption requested</summary>
        </member>
        <member name="F:MaszynaPi.MachineLogic.Architecture.ALUFlags.ZAK">
            <summary>Value in accumulator register equals 0</summary>
        </member>
        <member name="T:MaszynaPi.MachineLogic.Architecture.ArithmeticLogicUnit">
            <summary>
            Class represent <see cref="T:MaszynaPi.MachineLogic.CentralProcessingUnit"/>'s ALU. Allows to perform simple calculations using arithmetic/logic operations  
            between values of internal "registers" <see cref="F:MaszynaPi.MachineLogic.Architecture.ArithmeticLogicUnit.OperandA"/> and <see cref="F:MaszynaPi.MachineLogic.Architecture.ArithmeticLogicUnit.OperandB"/>. Results of those operations
            are always stored into <see cref="F:MaszynaPi.MachineLogic.Architecture.ArithmeticLogicUnit.OperandA"/> and then passed into <see cref="F:MaszynaPi.MachineLogic.Architecture.ArithmeticLogicUnit.AK"/> - an result <see cref="T:MaszynaPi.MachineLogic.Architecture.Register"/>,
            which value can be publicly accessed. <see cref="T:MaszynaPi.MachineLogic.Architecture.ArithmeticLogicUnit"/> class implements way to get information about 
            last operation's result and CPU's state via internal <see cref="F:MaszynaPi.MachineLogic.Architecture.ArithmeticLogicUnit.Flags"/> containing info about 
            currnetly set <see cref="T:MaszynaPi.MachineLogic.Architecture.ALUFlags"/>.
            </summary>
        </member>
        <member name="F:MaszynaPi.MachineLogic.Architecture.ArithmeticLogicUnit.OperandA">
            <summary>One of two (A, B) internal register-like value instance, for storing operations results and operands during calculations.</summary>
        </member>
        <member name="F:MaszynaPi.MachineLogic.Architecture.ArithmeticLogicUnit.OperandB">
            <summary>One of two (A, B) internal register-like value instance, for storing operations results and operands during calculations.</summary>
        </member>
        <member name="F:MaszynaPi.MachineLogic.Architecture.ArithmeticLogicUnit.AK">
            <summary> ALU's operation result register. Values can be accessed only via this register.</summary>
        </member>
        <member name="F:MaszynaPi.MachineLogic.Architecture.ArithmeticLogicUnit.Flags">
            <summary>Internal Flag register, holding information about ALU's and CPU's state.</summary>
        </member>
        <member name="F:MaszynaPi.MachineLogic.Architecture.ArithmeticLogicUnit.EncodedFlags">
            <summary>
            <see cref="T:MaszynaPi.MachineLogic.Architecture.ALUFlags"/> encoded as bitwise XOR of their string representation in lowercase ASCII letters 
            -> used for conditional statments in instruction microoperations. 
            </summary>
        </member>
        <member name="M:MaszynaPi.MachineLogic.Architecture.ArithmeticLogicUnit.#ctor(MaszynaPi.MachineLogic.Architecture.Register,MaszynaPi.MachineLogic.Architecture.Register,System.UInt32)">
            <summary> Creates <see cref="T:MaszynaPi.MachineLogic.Architecture.ArithmeticLogicUnit"/> instance. 
            Calls <see cref="M:MaszynaPi.MachineLogic.Architecture.ArithmeticLogicUnit.AutoSetFlags"/> to sets <see cref="F:MaszynaPi.MachineLogic.Architecture.ArithmeticLogicUnit.Flags"/> <see cref="T:MaszynaPi.MachineLogic.Architecture.Register"/> based on current ALU registers state.</summary>
            <param name="ak">Handle to result register.</param>
            <param name="value">Inital value of internal operands.</param>
        </member>
        <member name="M:MaszynaPi.MachineLogic.Architecture.ArithmeticLogicUnit.IsFlagSet(System.String)">
            <summary>
            Allows to check if ALU's flag register, has flag defined by <paramref name="flag"/> stirng set (see <see cref="F:MaszynaPi.MachineLogic.Architecture.ArithmeticLogicUnit.EncodedFlags"/>).
            <br></br>(<i>Side note after a year: Should've use <see cref="M:System.Enum.TryParse``1(System.String,``0@)"/> method</i>)
            </summary>
            <param name="flag">Name of specific ALU flag.</param>
            <returns>'true' if passed flag value is currently set in internal flag register, 'false' otherwises.</returns>
        </member>
        <member name="M:MaszynaPi.MachineLogic.Architecture.ArithmeticLogicUnit.IsFlagSet(System.Int32)">
            <returns>'true' if passed flag value is currently set in internal flag register, 'false' otherwises.</returns>
        </member>
        <member name="M:MaszynaPi.MachineLogic.Architecture.ArithmeticLogicUnit.SetFlags(MaszynaPi.MachineLogic.Architecture.ALUFlags)">
            <summary> Allows to manually set specific ALU's flag register <see cref="T:MaszynaPi.MachineLogic.Architecture.ALUFlags"/>. </summary>
            <param name="flags"><see cref="T:MaszynaPi.MachineLogic.Architecture.ALUFlags"/> to set in <see cref="F:MaszynaPi.MachineLogic.Architecture.ArithmeticLogicUnit.Flags"/></param>
        </member>
        <member name="M:MaszynaPi.MachineLogic.Architecture.ArithmeticLogicUnit.ClearFlags(MaszynaPi.MachineLogic.Architecture.ALUFlags)">
            <summary> Clears passed <see cref="T:MaszynaPi.MachineLogic.Architecture.ALUFlags"/> from internal <see cref="F:MaszynaPi.MachineLogic.Architecture.ArithmeticLogicUnit.Flags"/> register.</summary>
            <param name="flags"></param>
        </member>
        <member name="M:MaszynaPi.MachineLogic.Architecture.ArithmeticLogicUnit.GetFlags">
            <returns>ALU's <see cref="F:MaszynaPi.MachineLogic.Architecture.ArithmeticLogicUnit.Flags"/> <see cref="T:MaszynaPi.MachineLogic.Architecture.Register"/> content as <see cref="T:MaszynaPi.MachineLogic.Architecture.ALUFlags"/> enum.</returns>
        </member>
        <member name="M:MaszynaPi.MachineLogic.Architecture.ArithmeticLogicUnit.SetOperandB(System.UInt32)">
            <summary>Allows to set value of second operand of operation.</summary>
            <param name="value"></param>
        </member>
        <member name="M:MaszynaPi.MachineLogic.Architecture.ArithmeticLogicUnit.AutoSetFlags">
            <summary> Allows to set <see cref="F:MaszynaPi.MachineLogic.Architecture.ALUFlags.ZAK"/> and <see cref="F:MaszynaPi.MachineLogic.Architecture.ALUFlags.Z"/> flag in
            <see cref="F:MaszynaPi.MachineLogic.Architecture.ArithmeticLogicUnit.Flags"/> <see cref="T:MaszynaPi.MachineLogic.Architecture.Register"/> based on current ALU registers content.</summary>
        </member>
        <member name="M:MaszynaPi.MachineLogic.Architecture.ArithmeticLogicUnit.SetResult">
            <summary>Assings value of first operand (<see cref="F:MaszynaPi.MachineLogic.Architecture.ArithmeticLogicUnit.OperandA"/>) to <see cref="F:MaszynaPi.MachineLogic.Architecture.ArithmeticLogicUnit.AK"/>.</summary>
        </member>
        <member name="M:MaszynaPi.MachineLogic.Architecture.ArithmeticLogicUnit.SetResultAndFlags">
            <summary> Sets value of flag and result registers (<see cref="F:MaszynaPi.MachineLogic.Architecture.ArithmeticLogicUnit.Flags"/>, <see cref="F:MaszynaPi.MachineLogic.Architecture.ArithmeticLogicUnit.AK"/>), base on internal operands state/values. </summary>
        </member>
        <member name="M:MaszynaPi.MachineLogic.Architecture.ArithmeticLogicUnit.Reset">
            <summary>Resets state of all internal component to their default state.</summary>
        </member>
        <member name="M:MaszynaPi.MachineLogic.Architecture.ArithmeticLogicUnit.Nop">
            <summary> As no operation, assigns <see cref="F:MaszynaPi.MachineLogic.Architecture.ArithmeticLogicUnit.OperandB"/> value to <see cref="F:MaszynaPi.MachineLogic.Architecture.ArithmeticLogicUnit.OperandA"/>. </summary>
        </member>
        <member name="M:MaszynaPi.MachineLogic.Architecture.ArithmeticLogicUnit.Inc">
            <summary> Performs incrementation of ALU's <see cref="F:MaszynaPi.MachineLogic.Architecture.ArithmeticLogicUnit.AK"/> register value.</summary>
        </member>
        <member name="M:MaszynaPi.MachineLogic.Architecture.ArithmeticLogicUnit.Dec">
            <summary> Performs decrementation of ALU's <see cref="F:MaszynaPi.MachineLogic.Architecture.ArithmeticLogicUnit.AK"/> register value.</summary>
        </member>
        <member name="M:MaszynaPi.MachineLogic.Architecture.ArithmeticLogicUnit.Not">
            <summary> Performs bitwise negation of ALU's <see cref="F:MaszynaPi.MachineLogic.Architecture.ArithmeticLogicUnit.OperandA"/> register value.</summary>
        </member>
        <member name="M:MaszynaPi.MachineLogic.Architecture.ArithmeticLogicUnit.Or">
            <summary> Performs bitwise OR between ALU's <see cref="F:MaszynaPi.MachineLogic.Architecture.ArithmeticLogicUnit.OperandA"/> and <see cref="F:MaszynaPi.MachineLogic.Architecture.ArithmeticLogicUnit.OperandB"/> values. Stores result in A. </summary>
        </member>
        <member name="M:MaszynaPi.MachineLogic.Architecture.ArithmeticLogicUnit.And">
            <summary> Performs bitwise AND between ALU's <see cref="F:MaszynaPi.MachineLogic.Architecture.ArithmeticLogicUnit.OperandA"/> and <see cref="F:MaszynaPi.MachineLogic.Architecture.ArithmeticLogicUnit.OperandB"/> values. Stores result in A.</summary>
        </member>
        <member name="M:MaszynaPi.MachineLogic.Architecture.ArithmeticLogicUnit.Shr">
            <summary> Performs bitwise right shif of ALU's <see cref="F:MaszynaPi.MachineLogic.Architecture.ArithmeticLogicUnit.OperandA"/> value, using <see cref="F:MaszynaPi.MachineLogic.Architecture.ArithmeticLogicUnit.OperandB"/> value as shift amount. Stores result in A. </summary>
        </member>
        <member name="M:MaszynaPi.MachineLogic.Architecture.ArithmeticLogicUnit.Add">
            <summary>Adds ALU's <see cref="F:MaszynaPi.MachineLogic.Architecture.ArithmeticLogicUnit.OperandA"/> and <see cref="F:MaszynaPi.MachineLogic.Architecture.ArithmeticLogicUnit.OperandB"/> values and stores result in A. </summary>
        </member>
        <member name="M:MaszynaPi.MachineLogic.Architecture.ArithmeticLogicUnit.Sub">
            <summary>Subtracts ALU's <see cref="F:MaszynaPi.MachineLogic.Architecture.ArithmeticLogicUnit.OperandB"/> from <see cref="F:MaszynaPi.MachineLogic.Architecture.ArithmeticLogicUnit.OperandA"/> values and stores result in A. </summary>
        </member>
        <member name="M:MaszynaPi.MachineLogic.Architecture.ArithmeticLogicUnit.Mul">
            <summary>Multiplies ALU's <see cref="F:MaszynaPi.MachineLogic.Architecture.ArithmeticLogicUnit.OperandA"/> and <see cref="F:MaszynaPi.MachineLogic.Architecture.ArithmeticLogicUnit.OperandB"/> values and stores result in A. </summary>
        </member>
        <member name="M:MaszynaPi.MachineLogic.Architecture.ArithmeticLogicUnit.Div">
            <summary>Divides ALU's <see cref="F:MaszynaPi.MachineLogic.Architecture.ArithmeticLogicUnit.OperandA"/> by <see cref="F:MaszynaPi.MachineLogic.Architecture.ArithmeticLogicUnit.OperandB"/> value and stores integer result in A. </summary>
        </member>
        <member name="T:MaszynaPi.MachineLogic.Architecture.BusException">
            <summary> Generic <see cref="T:System.Exception"/> for representing errors related to <see cref="T:MaszynaPi.MachineLogic.Architecture.Bus"/> class issues. </summary>
        </member>
        <member name="T:MaszynaPi.MachineLogic.Architecture.Bus">
            <summary>
            <see cref="T:MaszynaPi.MachineLogic.Architecture.Register"/>-like class representing Machines' <see cref="T:MaszynaPi.MachineLogic.Architecture.Bus"/>. 
            Allows to specify current data on bus using <see cref="F:MaszynaPi.MachineLogic.Architecture.Bus.Value"/> and bus width with <see cref="F:MaszynaPi.MachineLogic.Architecture.Bus.Bitsize"/>.
            It can have <see cref="F:MaszynaPi.MachineLogic.Architecture.Bus.EMPTY"/> value assigned to represent no-value, <i>'high-impedance'</i> state.
            </summary>
        </member>
        <member name="F:MaszynaPi.MachineLogic.Architecture.Bus.Name">
            <summary>String representing name of <see cref="T:MaszynaPi.MachineLogic.Architecture.Bus"/> instance (address/data/transitive)</summary>
        </member>
        <member name="M:MaszynaPi.MachineLogic.Architecture.Bus.#ctor(System.UInt32,System.String)">
            <summary>Initializes new <see cref="T:MaszynaPi.MachineLogic.Architecture.Bus"/> instance, with <see cref="F:MaszynaPi.MachineLogic.Architecture.Bus.EMPTY"/> value, of allowed <paramref name="bitsize"/> size.</summary>
            <param name="bitsize">"width" of bus, defines maximum size of internal <see cref="F:MaszynaPi.MachineLogic.Architecture.Bus.Value"/>.</param>
            <param name="name">String to be set as name of <see cref="T:MaszynaPi.MachineLogic.Architecture.Bus"/> instance (address/data/transitive).</param>
        </member>
        <member name="M:MaszynaPi.MachineLogic.Architecture.Bus.GetValue">
            <returns>Returns <see cref="F:MaszynaPi.MachineLogic.Architecture.Bus.Value"/> if bus is not empty, <see cref="T:MaszynaPi.MachineLogic.Architecture.BusException"/> is thrown otherwise.</returns>
            <exception cref="T:MaszynaPi.MachineLogic.Architecture.BusException"></exception>
        </member>
        <member name="M:MaszynaPi.MachineLogic.Architecture.Bus.SetValue(System.UInt32)">
            <summary>
            Allows to set unsigned integer value as bus <see cref="F:MaszynaPi.MachineLogic.Architecture.Bus.Value"/>. 
            Passed value can have any <see cref="T:System.UInt32"/> value, but potential overflow will be simulated, 
            before assigment, using <see cref="M:MaszynaPi.CommonOperations.Bitwise.HandleOverflow(System.UInt32,System.UInt32)"/> method with <see cref="F:MaszynaPi.MachineLogic.Architecture.Bus.Bitsize"/> param.
            </summary>
        </member>
        <member name="M:MaszynaPi.MachineLogic.Architecture.Bus.SetValue(System.Int32)">
            <summary>Allows to set integer value as bus <see cref="F:MaszynaPi.MachineLogic.Architecture.Bus.Value"/>.</summary>
            <param name="value">Integer to be assigned as bus <see cref="F:MaszynaPi.MachineLogic.Architecture.Bus.Value"/>.</param>
        </member>
        <member name="M:MaszynaPi.MachineLogic.Architecture.Bus.SetEmpty">
            <summary>Sets special <see cref="F:MaszynaPi.MachineLogic.Architecture.Bus.EMPTY"/> value to represent high-impedance state. </summary>
        </member>
        <member name="M:MaszynaPi.MachineLogic.Architecture.Bus.IsEmpty">
            <summary> Checks if <see cref="T:MaszynaPi.MachineLogic.Architecture.Bus"/> is empty.  </summary>
            <returns>True if bus <see cref="F:MaszynaPi.MachineLogic.Architecture.Bus.Value"/> is equal to <see cref="F:MaszynaPi.MachineLogic.Architecture.Bus.EMPTY"/> constans, false otherwise.</returns>
        </member>
        <member name="M:MaszynaPi.MachineLogic.Architecture.Bus.SetBitsize(System.UInt32)">
            <summary> Sets <see cref="F:MaszynaPi.MachineLogic.Architecture.Bus.Bitsize"/> parameter (width) of bus. </summary>
            <param name="bitsize">Bit size (width) to be set.</param>
        </member>
        <member name="M:MaszynaPi.MachineLogic.Architecture.Bus.GetBitsize">
            <returns>Internal <see cref="F:MaszynaPi.MachineLogic.Architecture.Bus.Bitsize"/> of this bus instance.</returns>
        </member>
        <member name="M:MaszynaPi.MachineLogic.Architecture.Bus.Reset">
            <summary>Allows to reset this bus instance state by calling <see cref="M:MaszynaPi.MachineLogic.Architecture.Bus.SetEmpty"/> method on itself.</summary>
        </member>
        <member name="T:MaszynaPi.MachineLogic.Architecture.InstructionDecoder">
            <summary>
            Represents <see cref="T:MaszynaPi.MachineLogic.CentralProcessingUnit"/>'s component responsible for decoding instructions into 
            set of their underlaing microinstructions (uOperations). 
            </summary>
        </member>
        <member name="P:MaszynaPi.MachineLogic.Architecture.InstructionDecoder.StatementArg">
            <summary>Stores argumet of currently decoded instruction's uOp pseudo-lang conditional statement.</summary>
        </member>
        <member name="M:MaszynaPi.MachineLogic.Architecture.InstructionDecoder.#ctor">
            <summary>Creates new instance of decoder.</summary>
        </member>
        <member name="M:MaszynaPi.MachineLogic.Architecture.InstructionDecoder.GetStatementJumpLabel(System.Boolean,System.Collections.Generic.List{System.String})">
            <summary>
            Searches for jump label in <paramref name="signals"/> that should be next destination within single instruction's one-clock-cycle uOps signals definition.
            <paramref name="signals"/> list must contain valid conditional statement with label, otherwise <see cref="T:MaszynaPi.MachineLogic.CPUException"/> is thrown.
            </summary>
            <param name="conditionalStatementResult">Calculated result of uOp contitional statement.</param>
            <param name="signals">List of signals acive in current clock cycle.</param>
            <returns>String with found destination label or <see cref="F:System.String.Empty"/> if label was not found.</returns>
            <exception cref="T:MaszynaPi.MachineLogic.CPUException"></exception>
        </member>
        <member name="M:MaszynaPi.MachineLogic.Architecture.InstructionDecoder.GetSignalStatementArgument(System.Collections.Generic.List{System.String})">
            <summary>Sarches for argument argument of microcode conditional statement in passed <paramref name="signals"/> list. </summary>
            <param name="signals">List of signals acive in current clock cycle.</param>
            <returns>Found argument string or <see cref="F:System.String.Empty"/> if conditional statement not found in <paramref name="signals"/>.</returns>
        </member>
        <member name="M:MaszynaPi.MachineLogic.Architecture.InstructionDecoder.GetJumpIndex(System.Collections.Generic.List{System.Collections.Generic.List{System.String}},System.String)">
            <summary>
            Calculates index of line (destination jump) within single instruction <paramref name="instructionSignals"/>, that contains 
            destination <paramref name="label"/>. 
            </summary>
            <param name="instructionSignals">All microinstructions that creates currently decoded instruction.</param>
            <param name="label">Microcode destination jump label from conditional statement.</param>
            <returns>Index of line in <paramref name="instructionSignals"/> (main list index) that starts with <paramref name="label"/>, -1 if not found.</returns>
        </member>
        <member name="M:MaszynaPi.MachineLogic.Architecture.InstructionDecoder.GetNumberOfTicksInInstruction(System.UInt32)">
            <summary>Calculates number of clock cycles that must be performed to execute instruction with opcode <paramref name="instructionOpcode"/>.</summary>
            <param name="instructionOpcode">Opcode of processed instruction.</param>
            <returns>Number of cycles neccessary to execute instruction defined by <paramref name="instructionOpcode"/>.</returns>
        </member>
        <member name="F:MaszynaPi.MachineLogic.Architecture.InstructionDecoder.OnRequestALUFlagState">
            <summary> Function hadle for getting from <see cref="T:MaszynaPi.MachineLogic.Architecture.ArithmeticLogicUnit"/> specific <see cref="T:MaszynaPi.MachineLogic.Architecture.ALUFlags"/> 
            state (set/not as boolean true/false), specified as it's name in string format. </summary>
        </member>
        <member name="M:MaszynaPi.MachineLogic.Architecture.InstructionDecoder.RequestALUFlagState(System.String)">
            <summary>Performs null check and calls <see cref="F:MaszynaPi.MachineLogic.Architecture.InstructionDecoder.OnRequestALUFlagState"/> with <paramref name="flagName"/>.</summary>
            <param name="flagName">Argument of microop conditional statement as name of ALU's flag.</param>
            <returns>True if ALU's related flag (that have <paramref name="flagName"/> name) is set, false otherwise.</returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:MaszynaPi.MachineLogic.Architecture.InstructionDecoder.DecodeActiveSignals(System.UInt32,System.Int32)">
            <summary>
            Creates list consisting of names of uOps signals that should be active in current <paramref name="tick"/> of 
            currently executed instruction, specified by <paramref name="instructionOpcode"/>.
            If any of instruction's micocode lines contains conditional statement, method sets internal
            <see cref="P:MaszynaPi.MachineLogic.Architecture.InstructionDecoder.StatementArg"/>, <see cref="F:MaszynaPi.MachineLogic.Architecture.InstructionDecoder.JumpLabel"/> and <see cref="F:MaszynaPi.MachineLogic.Architecture.InstructionDecoder.JumpIndex"/> fields, that allows to
            control, instruction later flow.
            </summary>
            <param name="instructionOpcode">Opcode of currently executed instruction.</param>
            <param name="tick">Zero-based number of clock cycle, where cycle 0 is current instruction fetch cycle.</param>
            <returns>New list of microinstructions that should be activated.</returns>
        </member>
        <member name="M:MaszynaPi.MachineLogic.Architecture.InstructionDecoder.GetNextSignalsIndex(System.Int32)">
            <summary>
            Allows to retreive index of next part of instruction's uOps that should be excuted.
            Base on passed current <paramref name="tickidx"/> and internal <see cref="F:MaszynaPi.MachineLogic.Architecture.InstructionDecoder.JumpIndex"/> field (set in <see cref="M:MaszynaPi.MachineLogic.Architecture.InstructionDecoder.DecodeActiveSignals(System.UInt32,System.Int32)"/> method).
            </summary>
            <param name="tickidx">Index of signals set currently executed in pending instrucition.</param>
            <returns>Index of instruction's set of microoperations, that should be set active on next clock cycle.</returns>
        </member>
        <member name="T:MaszynaPi.MachineLogic.Architecture.InstructionRegister">
            <summary> 
            Special <see cref="T:MaszynaPi.MachineLogic.Architecture.Register"/> class representing CIR - Current instruction register.
            Responsible for storing and separating opcode and address/argument components of processed instruction.
            </summary>
        </member>
        <member name="F:MaszynaPi.MachineLogic.Architecture.InstructionRegister.AD">
            <summary>Internal Instruction Argument register.</summary>
        </member>
        <member name="F:MaszynaPi.MachineLogic.Architecture.InstructionRegister.KOD">
            <summary>Internal Instruction Opcode register.</summary>
        </member>
        <member name="M:MaszynaPi.MachineLogic.Architecture.InstructionRegister.#ctor(System.UInt32,System.UInt32,System.UInt32)">
            <summary><inheritdoc cref="M:MaszynaPi.MachineLogic.Architecture.Register.#ctor(System.UInt32,System.UInt32)"/>.<br></br> Represents special <see cref="T:MaszynaPi.MachineLogic.Architecture.InstructionRegister"/> CPU's component.</summary>
            <param name="addrBitsize">Currently set size of address/argument component of instruction in bits</param>
            <param name="opcodeBitsize">Currently set size of opcode component of instruction in bits</param>
            <param name="value"><inheritdoc cref="M:MaszynaPi.MachineLogic.Architecture.Register.#ctor(System.UInt32,System.UInt32)" path="/param[@name='value']"/></param>
        </member>
        <member name="M:MaszynaPi.MachineLogic.Architecture.InstructionRegister.GetArgument">
            <summary>Allows to retreive argument component of stored instruction from internal <see cref="F:MaszynaPi.MachineLogic.Architecture.InstructionRegister.AD"/> value.</summary>
            <returns>Value of address/argument component of processed instruction.</returns>
        </member>
        <member name="M:MaszynaPi.MachineLogic.Architecture.InstructionRegister.GetOpcode">
            <summary>Allows to retreive opcode component of stored instruction from internal <see cref="F:MaszynaPi.MachineLogic.Architecture.InstructionRegister.KOD"/> value.</summary>
            <returns>Value of opcode component of processed instruction.</returns>
        </member>
        <member name="M:MaszynaPi.MachineLogic.Architecture.InstructionRegister.SetBitsize(System.UInt32,System.UInt32)">
            <summary>
            <inheritdoc/><br></br>
            Additionally set bitsize of internal address and opcode registers.
            </summary>
            <param name="addrBitsize"></param>
            <param name="opcodeBitsize"></param>
        </member>
        <member name="M:MaszynaPi.MachineLogic.Architecture.InstructionRegister.DecodeInstruction">
            <summary>Decodes and separates currently stored instruction value into address and opcode registers.</summary>
        </member>
        <member name="M:MaszynaPi.MachineLogic.Architecture.InstructionRegister.Reset">
            <summary><inheritdoc/></summary>
        </member>
        <member name="T:MaszynaPi.MachineLogic.Architecture.MemoryException">
            <summary> Generic <see cref="T:System.Exception"/> for representing errors related to <see cref="T:MaszynaPi.MachineLogic.Architecture.Memory"/> class issues. </summary>
        </member>
        <member name="T:MaszynaPi.MachineLogic.Architecture.Memory">
            <summary>
            Class representing Machines' data-program read/write memory.
            </summary>
        </member>
        <member name="F:MaszynaPi.MachineLogic.Architecture.Memory.Content">
            <summary>
            Internal contents of <see cref="T:MaszynaPi.MachineLogic.Architecture.Memory"/> where each element is single machine word 
            (<see cref="M:MaszynaPi.MachineLogic.ArchitectureSettings.GetWordBits"/> irrelevat - always <see cref="T:System.UInt32"/> max). 
            </summary>
        </member>
        <member name="M:MaszynaPi.MachineLogic.Architecture.Memory.#ctor">
            <summary> Default constructor, calls <see cref="M:MaszynaPi.MachineLogic.Architecture.Memory.InitMemoryContent"/> for setting <see cref="F:MaszynaPi.MachineLogic.Architecture.Memory.Content"/>. </summary>
        </member>
        <member name="M:MaszynaPi.MachineLogic.Architecture.Memory.InitMemoryContent">
            <summary>
            Initializes <see cref="F:MaszynaPi.MachineLogic.Architecture.Memory.Content"/> with <see cref="F:MaszynaPi.Defines.DEFAULT_MEM_VAL"/> of size <see cref="M:MaszynaPi.MachineLogic.ArchitectureSettings.GetAddressSpace"/>.
            </summary>
        </member>
        <member name="M:MaszynaPi.MachineLogic.Architecture.Memory.ExpandMemory(System.UInt32)">
            <summary>
            Expands <see cref="F:MaszynaPi.MachineLogic.Architecture.Memory.Content"/>, base on <see cref="M:MaszynaPi.MachineLogic.ArchitectureSettings.GetAddressSpace"/> (should be called if address space was changed).
            All newly added elements are initialized with <see cref="F:MaszynaPi.Defines.DEFAULT_MEM_VAL"/>.
            </summary>
            <param name="oldAddressSpace">Old value of address space, for calculating amount of elements to add.</param>
        </member>
        <member name="M:MaszynaPi.MachineLogic.Architecture.Memory.ShrinkMemory(System.UInt32)">
            <summary>
            Shrinks <see cref="F:MaszynaPi.MachineLogic.Architecture.Memory.Content"/>, base on <see cref="M:MaszynaPi.MachineLogic.ArchitectureSettings.GetAddressSpace"/> (should be called if address space was changed).
            All deleted elements contents are lost.
            </summary>
            <param name="oldAddressSpace">Old value of address space, for calculating amount of elements to add.</param>
        </member>
        <member name="M:MaszynaPi.MachineLogic.Architecture.Memory.StoreValue(System.UInt32,System.UInt32)">
            <summary>
            Writes given <paramref name="value"/> under specific address <paramref name="addr"/> (where address is index of machine word).
            Written value is checked for potential overflow with <see cref="M:MaszynaPi.CommonOperations.Bitwise.HandleOverflow(System.UInt32,System.UInt32)"/>.
            If passed <paramref name="addr"/> is not in address space of <see cref="T:MaszynaPi.MachineLogic.Architecture.Memory"/>, <see cref="T:MaszynaPi.MachineLogic.Architecture.MemoryException"/> is thrown.
            </summary>
            <param name="addr">Address representing index of machine word that should be updated (index of <see cref="F:MaszynaPi.MachineLogic.Architecture.Memory.Content"/> list).</param>
            <param name="value">Value that should be written into specific <see cref="F:MaszynaPi.MachineLogic.Architecture.Memory.Content"/> index.</param>
            <exception cref="T:MaszynaPi.MachineLogic.Architecture.MemoryException"></exception>
        </member>
        <member name="M:MaszynaPi.MachineLogic.Architecture.Memory.GetValue(System.UInt32)">
            <summary>
            Retreives value from specific index (<paramref name="addr"/>) of <see cref="F:MaszynaPi.MachineLogic.Architecture.Memory.Content"/>.
            If passed <paramref name="addr"/> is not in address space of <see cref="T:MaszynaPi.MachineLogic.Architecture.Memory"/>, <see cref="T:MaszynaPi.MachineLogic.Architecture.MemoryException"/> is thrown.
            </summary>
            <param name="addr">Address (index) of value that should be read.</param>
            <returns>Read value under <see cref="F:MaszynaPi.MachineLogic.Architecture.Memory.Content"/>[<paramref name="addr"/>]</returns>
            <exception cref="T:MaszynaPi.MachineLogic.Architecture.MemoryException"></exception>
        </member>
        <member name="M:MaszynaPi.MachineLogic.Architecture.Memory.Reset">
            <summary>Resets <see cref="T:MaszynaPi.MachineLogic.Architecture.Memory"/> by calling <see cref="M:MaszynaPi.MachineLogic.Architecture.Memory.InitMemoryContent"/> method.</summary>
        </member>
        <member name="M:MaszynaPi.MachineLogic.Architecture.Memory.GetContentHandle">
            <summary>Allows to get internal list <see cref="F:MaszynaPi.MachineLogic.Architecture.Memory.Content"/> handle, for specific User Interface purposes.</summary>
            <returns>Instance of internal <see cref="F:MaszynaPi.MachineLogic.Architecture.Memory.Content"/> list.</returns>
        </member>
        <member name="T:MaszynaPi.MachineLogic.Architecture.Register">
            <summary>Class representing basic read/write register.</summary>
        </member>
        <member name="F:MaszynaPi.MachineLogic.Architecture.Register.Value">
            <summary> Value currently stored in <see cref="T:MaszynaPi.MachineLogic.Architecture.Register"/>. </summary>
        </member>
        <member name="F:MaszynaPi.MachineLogic.Architecture.Register.Bitsize">
            <summary> Size of <see cref="T:MaszynaPi.MachineLogic.Architecture.Register"/> in bits, defining maximum value that can be stored.</summary>
        </member>
        <member name="M:MaszynaPi.MachineLogic.Architecture.Register.#ctor(System.UInt32,System.UInt32)">
            <summary>
            Creates new <see cref="T:MaszynaPi.MachineLogic.Architecture.Register"/> instance, initialized with specific <paramref name="value"/> 
            that later can take maximum of (2^<paramref name="bitsize"/>-1) 
            </summary>
            <param name="bitsize">Initial Register size in bits.</param>
            <param name="value">Initial value of register. Defaults to <see cref="F:MaszynaPi.Defines.DEFAULT_REG_VAL"/>.</param>
        </member>
        <member name="M:MaszynaPi.MachineLogic.Architecture.Register.SetValue(System.UInt32)">
            <summary>
            Assingns passed <paramref name="value"/> to internal <see cref="F:MaszynaPi.MachineLogic.Architecture.Register.Value"/> of <see cref="T:MaszynaPi.MachineLogic.Architecture.Register"/>.
            Passed value can have any <see cref="T:System.UInt32"/> value, but potential overflow will be simulated, 
            before assigment, using <see cref="M:MaszynaPi.CommonOperations.Bitwise.HandleOverflow(System.UInt32,System.UInt32)"/> method.
            </summary>
            <param name="value">Value to be set (after overflow handling) as <see cref="F:MaszynaPi.MachineLogic.Architecture.Register.Value"/>.</param>
        </member>
        <member name="M:MaszynaPi.MachineLogic.Architecture.Register.GetValue">
            <returns>Internal <see cref="F:MaszynaPi.MachineLogic.Architecture.Register.Value"/></returns>
        </member>
        <member name="M:MaszynaPi.MachineLogic.Architecture.Register.SetBitsize(System.UInt32,System.UInt32)">
            <summary> Sets <see cref="F:MaszynaPi.MachineLogic.Architecture.Register.Bitsize"/> parameter of register.  </summary>
            <param name="bitsize">Bit size to be set</param>
            <param name="instbitsize">Instruction bit size (parameter for <see cref="T:MaszynaPi.MachineLogic.Architecture.InstructionRegister"/> class)</param>
        </member>
        <member name="M:MaszynaPi.MachineLogic.Architecture.Register.GetBitsize">
            <returns>Internal <see cref="F:MaszynaPi.MachineLogic.Architecture.Register.Bitsize"/></returns>
        </member>
        <member name="M:MaszynaPi.MachineLogic.Architecture.Register.Reset">
            <summary> Resets <see cref="F:MaszynaPi.MachineLogic.Architecture.Register.Value"/> state via <see cref="M:MaszynaPi.MachineLogic.Architecture.Register.SetValue(System.UInt32)"/> method using <see cref="F:MaszynaPi.Defines.DEFAULT_REG_VAL"/> constant.</summary>
        </member>
        <member name="T:MaszynaPi.MachineLogic.IODevices.CharacterOutput">
            <summary>
            Character <see cref="F:MaszynaPi.MachineLogic.IODevices.IOType.Output"/> device. Provides method for <see cref="T:MaszynaPi.MachineLogic.CentralProcessingUnit"/> to write data to it.
            One character at time can be put into internal buffer and will remain there until UI representation handles it's content.
            </summary>
        </member>
        <member name="F:MaszynaPi.MachineLogic.IODevices.CharacterOutput.CharactersBuffer">
            <summary>
            Representation of output buffer structure, where characters written by CPU are stored and can be viewed by user 
            in GUI representation of class (via <see cref="T:MaszynaPi.MachineUI.UserControlCharacterOutput"/> instance).
            </summary>
        </member>
        <member name="M:MaszynaPi.MachineLogic.IODevices.CharacterOutput.#ctor(MaszynaPi.MachineLogic.Architecture.Register,MaszynaPi.MachineLogic.Architecture.Register,System.UInt32,MaszynaPi.MachineLogic.IODevices.IOType)">
            <summary>
            Creates new instance of <see cref="T:MaszynaPi.MachineLogic.IODevices.CharacterOutput"/> class, assigning by defaut 
            <see cref="F:MaszynaPi.MachineLogic.IODevices.IODevice.DeviceID"/> of 2 and <see cref="F:MaszynaPi.MachineLogic.IODevices.IODevice.Type"/> of <see cref="F:MaszynaPi.MachineLogic.IODevices.IOType.Output"/>.
            </summary>
            <param name="g"><inheritdoc path="/param[@name='g']"/></param>
            <param name="rb"><inheritdoc path="/param[@name='rb']"/></param>
            <param name="id"><inheritdoc path="/param[@name='id']"/>. Default is <see cref="F:MaszynaPi.MachineLogic.IODevices.CharacterOutput.ID"/>.</param>
            <param name="iOType"><inheritdoc path="/param[@name='iOType']"/>. Default is <see cref="F:MaszynaPi.MachineLogic.IODevices.CharacterOutput.TYPE"/> and should not be chaged.</param>
        </member>
        <member name="M:MaszynaPi.MachineLogic.IODevices.CharacterOutput.GetCharactersBufferHandle">
            <summary>Get representation of output buffer structure, where characters written by CPU are stored.</summary>
        </member>
        <member name="F:MaszynaPi.MachineLogic.IODevices.CharacterOutput.OnCharacterPushed">
            <summary>
            Parametless <see cref="T:System.Action"/> invoked when new character is put into <see cref="F:MaszynaPi.MachineLogic.IODevices.CharacterOutput.CharactersBuffer"/> by instance of <see cref="T:MaszynaPi.MachineLogic.CentralProcessingUnit"/>./
            </summary>
        </member>
        <member name="M:MaszynaPi.MachineLogic.IODevices.CharacterOutput.PushChar">
            <summary>
            Set <see cref="F:MaszynaPi.MachineLogic.IODevices.IODevice.IO_READY"/> valu into <see cref="F:MaszynaPi.MachineLogic.IODevices.IODevice.Ready"/> <see cref="T:MaszynaPi.MachineLogic.Architecture.Register"/>.
            Push value from <see cref="F:MaszynaPi.MachineLogic.IODevices.IODevice.IOBuffer"/> <see cref="T:MaszynaPi.MachineLogic.Architecture.Register"/> to <see cref="F:MaszynaPi.MachineLogic.IODevices.CharacterOutput.CharactersBuffer"/> as character (ASCII Encoding)
            and invokes <see cref="F:MaszynaPi.MachineLogic.IODevices.CharacterOutput.OnCharacterPushed"/>.
            </summary>
        </member>
        <member name="M:MaszynaPi.MachineLogic.IODevices.CharacterOutput.ReadFromIOBuffer">
            <summary>
            Checks if device is valid <see cref="F:MaszynaPi.MachineLogic.IODevices.IOType.Output"/> device using base implementation of <see cref="M:MaszynaPi.MachineLogic.IODevices.IODevice.ReadFromIOBuffer"/>.
            <br></br><inheritdoc cref="M:MaszynaPi.MachineLogic.IODevices.CharacterOutput.PushChar"/>
            </summary>
        </member>
        <member name="T:MaszynaPi.MachineLogic.IODevices.HumiditySensor">
            <summary>
            <see cref="T:MaszynaPi.MachineLogic.IODevices.IODevice"/> of <see cref="F:MaszynaPi.MachineLogic.IODevices.IOType.Input"/> type. Provides method for <see cref="T:MaszynaPi.MachineLogic.CentralProcessingUnit"/> to read 
            humidity data from <see cref="T:MaszynaPi.SenseHatHandlers.SenseHatDevice"/> sensor.
            </summary>
        </member>
        <member name="F:MaszynaPi.MachineLogic.IODevices.HumiditySensor.Sensor">
            <summary><see cref="T:MaszynaPi.SenseHatHandlers.SenseHatDevice"/> instance for communicating via python script processes with humidity sensor located on SenseHat module.</summary>
        </member>
        <member name="M:MaszynaPi.MachineLogic.IODevices.HumiditySensor.#ctor(MaszynaPi.MachineLogic.Architecture.Register,MaszynaPi.MachineLogic.Architecture.Register,System.UInt32,MaszynaPi.MachineLogic.IODevices.IOType)">
            <summary>Creates new instance of <see cref="T:MaszynaPi.MachineLogic.IODevices.HumiditySensor"/> <see cref="T:MaszynaPi.MachineLogic.IODevices.IODevice"/>.</summary>
            <param name="g"><inheritdoc path="/param[@name='g']"/></param>
            <param name="rb"><inheritdoc path="/param[@name='rb']"/></param>
            <param name="id"><inheritdoc path="/param[@name='id']"/>. Default is <see cref="F:MaszynaPi.MachineLogic.IODevices.HumiditySensor.ID"/>.</param>
            <param name="iOType"><inheritdoc path="/param[@name='iOType']"/>. Default is <see cref="F:MaszynaPi.MachineLogic.IODevices.HumiditySensor.TYPE"/> and should not be chaged.</param>
        </member>
        <member name="M:MaszynaPi.MachineLogic.IODevices.HumiditySensor.GetValue">
            <summary>
            Sets  <see cref="T:MaszynaPi.MachineLogic.Architecture.Register"/> <see cref="F:MaszynaPi.MachineLogic.IODevices.IODevice.Ready"/> bit and assign value retreived from 
            related <see cref="M:MaszynaPi.SenseHatHandlers.SenseHatDevice.GetSensorData"/> into this instance's  <see cref="T:MaszynaPi.MachineLogic.Architecture.Register"/> <see cref="F:MaszynaPi.MachineLogic.IODevices.IODevice.IOBuffer"/>.
            </summary>
        </member>
        <member name="M:MaszynaPi.MachineLogic.IODevices.HumiditySensor.WriteToIOBuffer">
            <summary><inheritdoc cref="M:MaszynaPi.MachineLogic.IODevices.HumiditySensor.GetValue"/></summary>
        </member>
        <member name="T:MaszynaPi.MachineLogic.IODevices.MatrixLED">
            <summary>
            Implementaion of <see cref="F:MaszynaPi.MachineLogic.IODevices.IOType.Output"/> <see cref="T:MaszynaPi.MachineLogic.IODevices.IODevice"/> representing 8x8 LED Matrix on <see cref="T:MaszynaPi.SenseHatHandlers.SenseHatDevice"/>.
            Provides functionality for <see cref="T:MaszynaPi.MachineLogic.CentralProcessingUnit"/> to write data that will be shown on module's matrix, 
            base on selected <see cref="T:MaszynaPi.MachineLogic.IODevices.MatrixLED.Mode"/>:
            <br></br><see cref="F:MaszynaPi.MachineLogic.IODevices.MatrixLED.Mode.Letter"/> allows to represent passed number as one of printable ASCII symbols on Matrix 
            <br></br><see cref="F:MaszynaPi.MachineLogic.IODevices.MatrixLED.Mode.Paint"/> allows to paint single pixel at time, using bottom 6 bits of passed number as matrix pixel address 
            (consecutive numbers from top-left to bottom-right). Color of each pixel is selected using 9th, 10th and 11th bit as [R,G,B] component set to 255 or 0. 
            </summary>
        </member>
        <member name="T:MaszynaPi.MachineLogic.IODevices.MatrixLED.Mode">
            <summary>Represents 2 <see cref="T:MaszynaPi.MachineLogic.IODevices.MatrixLED"/> working modes.</summary>
        </member>
        <member name="F:MaszynaPi.MachineLogic.IODevices.MatrixLED.Mode.Letter">
            <summary>Each number written into <see cref="F:MaszynaPi.MachineLogic.IODevices.IODevice.IOBuffer"/> if show in <see cref="F:MaszynaPi.MachineLogic.IODevices.MatrixLED.Matrix"/> as it's ASCII representaion.</summary>
        </member>
        <member name="F:MaszynaPi.MachineLogic.IODevices.MatrixLED.Mode.Paint">
            <summary>Each number written into <see cref="F:MaszynaPi.MachineLogic.IODevices.IODevice.IOBuffer"/> is translated into single pixel of colour to be shown in <see cref="F:MaszynaPi.MachineLogic.IODevices.MatrixLED.Matrix"/>.</summary>
        </member>
        <member name="F:MaszynaPi.MachineLogic.IODevices.MatrixLED.WorkingMode">
            <summary>Current working <see cref="T:MaszynaPi.MachineLogic.IODevices.MatrixLED.Mode"/> of <see cref="T:MaszynaPi.MachineLogic.IODevices.MatrixLED"/>.</summary>
        </member>
        <member name="F:MaszynaPi.MachineLogic.IODevices.MatrixLED.Matrix">
            <summary><see cref="T:MaszynaPi.SenseHatHandlers.SenseHatDevice"/> instance for communicating via python script processes with 8x8  LED matrix located on SenseHat module.</summary>
        </member>
        <member name="M:MaszynaPi.MachineLogic.IODevices.MatrixLED.#ctor(MaszynaPi.MachineLogic.Architecture.Register,MaszynaPi.MachineLogic.Architecture.Register,System.UInt32,MaszynaPi.MachineLogic.IODevices.IOType)">
            <summary>Creates new instance of <see cref="T:MaszynaPi.MachineLogic.IODevices.MatrixLED"/> <see cref="T:MaszynaPi.MachineLogic.IODevices.IODevice"/>.</summary>
            <param name="g"><inheritdoc path="/param[@name='g']"/></param>
            <param name="rb"><inheritdoc path="/param[@name='rb']"/></param>
            <param name="id"><inheritdoc path="/param[@name='id']"/>. Default is <see cref="F:MaszynaPi.MachineLogic.IODevices.MatrixLED.ID"/>.</param>
            <param name="iOType"><inheritdoc path="/param[@name='iOType']"/>. Default is <see cref="F:MaszynaPi.MachineLogic.IODevices.MatrixLED.TYPE"/> and should not be chaged.</param>
        </member>
        <member name="M:MaszynaPi.MachineLogic.IODevices.MatrixLED.SetLetterMode">
            <summary>Sets this istance's <see cref="T:MaszynaPi.MachineLogic.IODevices.MatrixLED.Mode"/> to <see cref="F:MaszynaPi.MachineLogic.IODevices.MatrixLED.Mode.Letter"/></summary>
        </member>
        <member name="M:MaszynaPi.MachineLogic.IODevices.MatrixLED.SetPaintMode">
            <summary>Sets this istance's <see cref="T:MaszynaPi.MachineLogic.IODevices.MatrixLED.Mode"/> to <see cref="F:MaszynaPi.MachineLogic.IODevices.MatrixLED.Mode.Paint"/></summary>
        </member>
        <member name="M:MaszynaPi.MachineLogic.IODevices.MatrixLED.PushChar">
            <summary> 
            Push value from <see cref="F:MaszynaPi.MachineLogic.IODevices.IODevice.IOBuffer"/> to output <see cref="F:MaszynaPi.MachineLogic.IODevices.MatrixLED.Matrix"/> device using <see cref="M:MaszynaPi.SenseHatHandlers.SenseHatDevice.MatrixPrint(System.UInt32,System.String)"/>.
            </summary>
        </member>
        <member name="M:MaszynaPi.MachineLogic.IODevices.MatrixLED.ReadFromIOBuffer">
            <summary><inheritdoc cref="M:MaszynaPi.MachineLogic.IODevices.MatrixLED.PushChar"/></summary>
        </member>
        <member name="T:MaszynaPi.MachineLogic.IODevices.PressureSensor">
            <summary>
            <see cref="T:MaszynaPi.MachineLogic.IODevices.IODevice"/> of <see cref="F:MaszynaPi.MachineLogic.IODevices.IOType.Input"/> type. Provides method for <see cref="T:MaszynaPi.MachineLogic.CentralProcessingUnit"/> to read 
            pressure data from <see cref="T:MaszynaPi.SenseHatHandlers.SenseHatDevice"/> sensor.
            </summary>
        </member>
        <member name="F:MaszynaPi.MachineLogic.IODevices.PressureSensor.Sensor">
            <summary><see cref="T:MaszynaPi.SenseHatHandlers.SenseHatDevice"/> instance for communicating via python script processes with pressure sensor located on SenseHat module.</summary>
        </member>
        <member name="M:MaszynaPi.MachineLogic.IODevices.PressureSensor.#ctor(MaszynaPi.MachineLogic.Architecture.Register,MaszynaPi.MachineLogic.Architecture.Register,System.UInt32,MaszynaPi.MachineLogic.IODevices.IOType)">
            <summary>Creates new instance of <see cref="T:MaszynaPi.MachineLogic.IODevices.PressureSensor"/> <see cref="T:MaszynaPi.MachineLogic.IODevices.IODevice"/>.</summary>
            <param name="g"><inheritdoc path="/param[@name='g']"/></param>
            <param name="rb"><inheritdoc path="/param[@name='rb']"/></param>
            <param name="id"><inheritdoc path="/param[@name='id']"/>. Default is <see cref="F:MaszynaPi.MachineLogic.IODevices.PressureSensor.ID"/>.</param>
            <param name="iOType"><inheritdoc path="/param[@name='iOType']"/>. Default is <see cref="F:MaszynaPi.MachineLogic.IODevices.PressureSensor.TYPE"/> and should not be chaged.</param>
        </member>
        <member name="M:MaszynaPi.MachineLogic.IODevices.PressureSensor.GetValue">
            <summary>
            Sets  <see cref="T:MaszynaPi.MachineLogic.Architecture.Register"/> <see cref="F:MaszynaPi.MachineLogic.IODevices.IODevice.Ready"/> bit and assign value retreived from 
            related <see cref="M:MaszynaPi.SenseHatHandlers.SenseHatDevice.GetSensorData"/> into this instance's  <see cref="T:MaszynaPi.MachineLogic.Architecture.Register"/> <see cref="F:MaszynaPi.MachineLogic.IODevices.IODevice.IOBuffer"/>.
            </summary>
        </member>
        <member name="M:MaszynaPi.MachineLogic.IODevices.PressureSensor.WriteToIOBuffer">
            <summary><inheritdoc cref="M:MaszynaPi.MachineLogic.IODevices.PressureSensor.GetValue"/></summary>
        </member>
        <member name="T:MaszynaPi.MachineLogic.IODevices.TemperatureSensor">
            <summary>
            <see cref="T:MaszynaPi.MachineLogic.IODevices.IODevice"/> of <see cref="F:MaszynaPi.MachineLogic.IODevices.IOType.Input"/> type. Provides method for <see cref="T:MaszynaPi.MachineLogic.CentralProcessingUnit"/> to read 
            temperature data from <see cref="T:MaszynaPi.SenseHatHandlers.SenseHatDevice"/> sensor.
            </summary>
        </member>
        <member name="F:MaszynaPi.MachineLogic.IODevices.TemperatureSensor.Sensor">
            <summary><see cref="T:MaszynaPi.SenseHatHandlers.SenseHatDevice"/> instance for communicating via python script processes with temperature sensor located on SenseHat module.</summary>
        </member>
        <member name="M:MaszynaPi.MachineLogic.IODevices.TemperatureSensor.#ctor(MaszynaPi.MachineLogic.Architecture.Register,MaszynaPi.MachineLogic.Architecture.Register,System.UInt32,MaszynaPi.MachineLogic.IODevices.IOType)">
            <summary>Creates new instance of <see cref="T:MaszynaPi.MachineLogic.IODevices.TemperatureSensor"/> <see cref="T:MaszynaPi.MachineLogic.IODevices.IODevice"/>.</summary>
            <param name="g"><inheritdoc path="/param[@name='g']"/></param>
            <param name="rb"><inheritdoc path="/param[@name='rb']"/></param>
            <param name="id"><inheritdoc path="/param[@name='id']"/>. Default is <see cref="F:MaszynaPi.MachineLogic.IODevices.TemperatureSensor.ID"/>.</param>
            <param name="iOType"><inheritdoc path="/param[@name='iOType']"/>. Default is <see cref="F:MaszynaPi.MachineLogic.IODevices.TemperatureSensor.TYPE"/> and should not be chaged.</param>
        </member>
        <member name="M:MaszynaPi.MachineLogic.IODevices.TemperatureSensor.GetValue">
            <summary>
            Sets  <see cref="T:MaszynaPi.MachineLogic.Architecture.Register"/> <see cref="F:MaszynaPi.MachineLogic.IODevices.IODevice.Ready"/> bit and assign value retreived from 
            related <see cref="M:MaszynaPi.SenseHatHandlers.SenseHatDevice.GetSensorData"/> into this instance's  <see cref="T:MaszynaPi.MachineLogic.Architecture.Register"/> <see cref="F:MaszynaPi.MachineLogic.IODevices.IODevice.IOBuffer"/>.
            <br></br>Value provided in mili-celcius.
            </summary>
        </member>
        <member name="M:MaszynaPi.MachineLogic.IODevices.TemperatureSensor.WriteToIOBuffer">
            <summary><inheritdoc cref="M:MaszynaPi.MachineLogic.IODevices.TemperatureSensor.GetValue"/></summary>
        </member>
        <member name="T:MaszynaPi.MachineLogic.IODevices.CharacterInput">
            <summary>
            Character <see cref="F:MaszynaPi.MachineLogic.IODevices.IOType.Input"/> device. Provides method for <see cref="T:MaszynaPi.MachineLogic.CentralProcessingUnit"/> to read input data provided by user.
            One character at time can be fetched from internal buffer, and it will be deleted from it afterwards.
            </summary>
        </member>
        <member name="F:MaszynaPi.MachineLogic.IODevices.CharacterInput.CharactersBuffer">
            <summary>
            Representation of input buffer structure, where characters provided by user are stored and can be retreived by <see cref="T:MaszynaPi.MachineLogic.CentralProcessingUnit"/>.
            via this <see cref="T:MaszynaPi.MachineLogic.IODevices.CharacterInput"/> instance.
            </summary>
        </member>
        <member name="M:MaszynaPi.MachineLogic.IODevices.CharacterInput.#ctor(MaszynaPi.MachineLogic.Architecture.Register,MaszynaPi.MachineLogic.Architecture.Register,System.UInt32,MaszynaPi.MachineLogic.IODevices.IOType)">
            <summary>
            Creates new instance of <see cref="T:MaszynaPi.MachineLogic.IODevices.CharacterInput"/> class, assigning by defaut 
            <see cref="F:MaszynaPi.MachineLogic.IODevices.IODevice.DeviceID"/> of 1 and <see cref="F:MaszynaPi.MachineLogic.IODevices.IODevice.Type"/> of <see cref="F:MaszynaPi.MachineLogic.IODevices.IOType.Input"/>.
            </summary>
            <param name="g"><inheritdoc path="/param[@name='g']"/></param>
            <param name="rb"><inheritdoc path="/param[@name='rb']"/></param>
            <param name="id"><inheritdoc path="/param[@name='id']"/>. Default is <see cref="F:MaszynaPi.MachineLogic.IODevices.CharacterInput.ID"/>.</param>
            <param name="iOType"><inheritdoc path="/param[@name='iOType']"/>. Default is <see cref="F:MaszynaPi.MachineLogic.IODevices.CharacterInput.TYPE"/> and should not be chaged.</param>
        </member>
        <member name="M:MaszynaPi.MachineLogic.IODevices.CharacterInput.GetCharactersBufferHandle">
            <summary>Get representation of input buffer structure, where characters provided by user are stored.</summary>
        </member>
        <member name="F:MaszynaPi.MachineLogic.IODevices.CharacterInput.OnCharacterFetched">
            <summary>
            Parametless <see cref="T:System.Action"/> invoked when new character is fetch from <see cref="F:MaszynaPi.MachineLogic.IODevices.CharacterInput.CharactersBuffer"/> by this instance of <see cref="T:MaszynaPi.MachineLogic.IODevices.CharacterInput"/>./
            </summary>
        </member>
        <member name="M:MaszynaPi.MachineLogic.IODevices.CharacterInput.GetChar">
            <summary> 
            Checks if any character are avaiable in <see cref="F:MaszynaPi.MachineLogic.IODevices.CharacterInput.CharactersBuffer"/> to read and sets <see cref="F:MaszynaPi.MachineLogic.IODevices.IODevice.Ready"/> value accordingly.
            On character availabe, fetches first character from an input buffer queue as ASCII number and puts it into single-char <see cref="F:MaszynaPi.MachineLogic.IODevices.IODevice.IOBuffer"/> <see cref="T:MaszynaPi.MachineLogic.Architecture.Register"/>.
            Character is removed from Queue buffer and <see cref="F:MaszynaPi.MachineLogic.IODevices.CharacterInput.OnCharacterFetched"/> <see cref="T:System.Action"/> is invoked.
            </summary>
        </member>
        <member name="M:MaszynaPi.MachineLogic.IODevices.CharacterInput.WriteToIOBuffer">
            <summary> 
            Checks if device is valid <see cref="F:MaszynaPi.MachineLogic.IODevices.IOType.Input"/> device using base implementation of <see cref="M:MaszynaPi.MachineLogic.IODevices.IODevice.WriteToIOBuffer"/>.
            Checks if any character are avaiable in <see cref="F:MaszynaPi.MachineLogic.IODevices.CharacterInput.CharactersBuffer"/> to read and sets <see cref="F:MaszynaPi.MachineLogic.IODevices.IODevice.Ready"/> value accordingly.
            On character availabe, fetches first character from an input buffer queue as ASCII number and puts it into single-char <see cref="F:MaszynaPi.MachineLogic.IODevices.IODevice.IOBuffer"/> <see cref="T:MaszynaPi.MachineLogic.Architecture.Register"/>.
            Character is removed from Queue buffer and <see cref="F:MaszynaPi.MachineLogic.IODevices.CharacterInput.OnCharacterFetched"/> <see cref="T:System.Action"/> is invoked.
            </summary>
        </member>
        <member name="T:MaszynaPi.MachineLogic.IODevices.IODeviceException">
            <summary>General <see cref="T:System.Exception"/> for errors related to <see cref="T:MaszynaPi.MachineLogic.IODevices.IODevice"/> classes.</summary>
        </member>
        <member name="T:MaszynaPi.MachineLogic.IODevices.IOType">
            <summary>Enumeration representing different types of <see cref="T:MaszynaPi.MachineLogic.IODevices.IODevice"/>es.</summary>
        </member>
        <member name="F:MaszynaPi.MachineLogic.IODevices.IOType.Input">
            <summary>Signalizes external device sending data to <see cref="T:MaszynaPi.MachineLogic.CentralProcessingUnit"/>.</summary>
        </member>
        <member name="F:MaszynaPi.MachineLogic.IODevices.IOType.Output">
            <summary>Signalizes external device reading data from <see cref="T:MaszynaPi.MachineLogic.CentralProcessingUnit"/>.</summary>
        </member>
        <member name="F:MaszynaPi.MachineLogic.IODevices.IOType.InputOutput">
            <summary>Signalizes external device that can send and read data to/from <see cref="T:MaszynaPi.MachineLogic.CentralProcessingUnit"/>.</summary>
        </member>
        <member name="T:MaszynaPi.MachineLogic.IODevices.IODevice">
            <summary>
            Abstract class providing template for basic <see cref="T:MaszynaPi.MachineLogic.IODevices.IODevice"/> that can be <see cref="F:MaszynaPi.MachineLogic.IODevices.IOType.Input"/> device
            <see cref="F:MaszynaPi.MachineLogic.IODevices.IOType.Output"/> or both.
            </summary>
        </member>
        <member name="F:MaszynaPi.MachineLogic.IODevices.IODevice.IO_WAIT">
            <summary>Uint flag value indicating that device is in processing state - data awaited.</summary>
        </member>
        <member name="F:MaszynaPi.MachineLogic.IODevices.IODevice.IO_READY">
            <summary>Uint flag value indicating that device is ready to take/give data.</summary>
        </member>
        <member name="F:MaszynaPi.MachineLogic.IODevices.IODevice.DeviceID">
            <summary>ID of device.</summary>
        </member>
        <member name="F:MaszynaPi.MachineLogic.IODevices.IODevice.Type">
            <summary>Type of device.</summary>
        </member>
        <member name="F:MaszynaPi.MachineLogic.IODevices.IODevice.Ready">
            <summary>Internal 1 bit <see cref="T:MaszynaPi.MachineLogic.Architecture.Register"/> storing information about ready state (<see cref="F:MaszynaPi.MachineLogic.IODevices.IODevice.IO_WAIT"/>/<see cref="F:MaszynaPi.MachineLogic.IODevices.IODevice.IO_READY"/>).</summary>
        </member>
        <member name="F:MaszynaPi.MachineLogic.IODevices.IODevice.IOBuffer">
            <summary>Internal <see cref="T:MaszynaPi.MachineLogic.Architecture.Register"/> acting as buffer for data transmitted from/to I/O.</summary>
        </member>
        <member name="M:MaszynaPi.MachineLogic.IODevices.IODevice.#ctor(MaszynaPi.MachineLogic.Architecture.Register,MaszynaPi.MachineLogic.Architecture.Register,System.UInt32,MaszynaPi.MachineLogic.IODevices.IOType)">
            <summary>Default constructior for new I/O device of given <paramref name="iOType"/> and <paramref name="id"/>. </summary>
            <param name="g">Instance of CPU's "Ready" register. </param>
            <param name="rb">Instance of CPU's "I/O Buffer" register.</param>
            <param name="id">Requested ID number of device.</param>
            <param name="iOType">Type of device. Will affect virtual read/write methdos that can be used.</param>
        </member>
        <member name="M:MaszynaPi.MachineLogic.IODevices.IODevice.GetReadyValue">
            <summary>Provides access to <see cref="F:MaszynaPi.MachineLogic.IODevices.IODevice.Ready"/> <see cref="F:MaszynaPi.MachineLogic.Architecture.Register.Value"/>.</summary>
            <returns>1 if IO data is ready 0 otherwise.</returns>
        </member>
        <member name="M:MaszynaPi.MachineLogic.IODevices.IODevice.SetReadyValue(System.UInt32)">
            <summary>Allows to set <see cref="F:MaszynaPi.MachineLogic.IODevices.IODevice.Ready"/> <see cref="F:MaszynaPi.MachineLogic.Architecture.Register.Value"/>.</summary>
            <param name="value">New value of ready register. <see cref="M:MaszynaPi.MachineLogic.Architecture.Register.SetValue(System.UInt32)"/> will handle potential overflow of 1-bit datasize.</param>
        </member>
        <member name="M:MaszynaPi.MachineLogic.IODevices.IODevice.GetIOBufferValue">
            <summary>Allows to access current I/O buffer <see cref="F:MaszynaPi.MachineLogic.Architecture.Register.Value"/></summary>
            <returns>Value stored in internal I/O data buffer register. Used mainly for microinstruction datafolow access.</returns>
        </member>
        <member name="M:MaszynaPi.MachineLogic.IODevices.IODevice.SetIOBufferValue(System.UInt32)">
            <summary>Allows to set <see cref="F:MaszynaPi.MachineLogic.IODevices.IODevice.IOBuffer"/> <see cref="F:MaszynaPi.MachineLogic.Architecture.Register.Value"/>.</summary>
            <param name="value">New value of data buffer register. <see cref="M:MaszynaPi.MachineLogic.Architecture.Register.SetValue(System.UInt32)"/> will handle potential overflow of set datasize.</param>
        </member>
        <member name="M:MaszynaPi.MachineLogic.IODevices.IODevice.GetIOType">
            <summary>Allows to retreive <see cref="T:MaszynaPi.MachineLogic.IODevices.IOType"/> of device.</summary>
            <returns>Device <see cref="T:MaszynaPi.MachineLogic.IODevices.IOType"/>.</returns>
        </member>
        <member name="M:MaszynaPi.MachineLogic.IODevices.IODevice.GetID">
            <summary>Allows to retreive <see cref="F:MaszynaPi.MachineLogic.IODevices.IODevice.DeviceID"/>.</summary>
            <returns>Device ID value.</returns>
        </member>
        <member name="M:MaszynaPi.MachineLogic.IODevices.IODevice.ReadFromIOBuffer">
            <summary>
            Virtual template of I/O Buffer reading method for <b>external devices</b>: Buffer -> IO. Provides <b>only</b> check of Device's <see cref="T:MaszynaPi.MachineLogic.IODevices.IOType"/> 
            (buffer can be read only by <see cref="F:MaszynaPi.MachineLogic.IODevices.IOType.Output"/> device, otherwise <see cref="T:MaszynaPi.MachineLogic.IODevices.IODeviceException"/> is thrown).
            <br></br><u>Should be overriden in inplementing <see cref="F:MaszynaPi.MachineLogic.IODevices.IOType.Output"/> <see cref="T:MaszynaPi.MachineLogic.IODevices.IODevice"/></u>
            </summary>
            <exception cref="T:MaszynaPi.MachineLogic.IODevices.IODeviceException"></exception>
        </member>
        <member name="M:MaszynaPi.MachineLogic.IODevices.IODevice.WriteToIOBuffer">
            <summary>
            Virtual template of I/O Buffer writing method for <b>external devices</b>: IO -> Buffer . Provides <b>only</b> check of Device's <see cref="T:MaszynaPi.MachineLogic.IODevices.IOType"/> 
            (value can be written to buffer only by <see cref="F:MaszynaPi.MachineLogic.IODevices.IOType.Input"/> device, otherwise <see cref="T:MaszynaPi.MachineLogic.IODevices.IODeviceException"/> is thrown).
            <br></br><u>Should be overriden in inplementing <see cref="F:MaszynaPi.MachineLogic.IODevices.IOType.Input"/> <see cref="T:MaszynaPi.MachineLogic.IODevices.IODevice"/></u>
            </summary>
            <exception cref="T:MaszynaPi.MachineLogic.IODevices.IODeviceException"></exception>
        </member>
        <member name="T:MaszynaPi.MachineLogic.ArchitectureSettings">
            <summary>
            Static class storing machine architecture-related information and allowing to modify 
            (for example from User Interface) and retreive them via set provided methods.
            </summary>
        </member>
        <member name="F:MaszynaPi.MachineLogic.ArchitectureSettings.AddressSpace">
            <summary> Current address space size in bits. </summary>
        </member>
        <member name="F:MaszynaPi.MachineLogic.ArchitectureSettings.CodeBits">
            <summary> Current opcode size in bits. </summary>
        </member>
        <member name="F:MaszynaPi.MachineLogic.ArchitectureSettings.CurrentArchitecture">
            <summary> Current <see cref="T:MaszynaPi.Defines.Architecture"/> of machine. </summary>
        </member>
        <member name="F:MaszynaPi.MachineLogic.ArchitectureSettings.ActiveComponents">
            <summary> Encoded active <see cref="T:MaszynaPi.Defines.Components"/> of current <see cref="T:MaszynaPi.Defines.Architecture"/> of machine. </summary>
        </member>
        <member name="F:MaszynaPi.MachineLogic.ArchitectureSettings.AvailableSignals">
            <summary> List of microoperations available to use in currently selected architecture. </summary>
        </member>
        <member name="F:MaszynaPi.MachineLogic.ArchitectureSettings.InterruptVector">
            <summary>Data structure mapping interruption-specific bits (<see cref="P:System.Collections.Generic.Dictionary`2.Keys"/>) into memory adresses (<see cref="P:System.Collections.Generic.Dictionary`2.Values"/>).</summary>
        </member>
        <member name="F:MaszynaPi.MachineLogic.ArchitectureSettings.IODevices">
            <summary>Data structure mapping addresses of IO devices (<see cref="P:System.Collections.Generic.Dictionary`2.Keys"/>) into their's ID (<see cref="P:System.Collections.Generic.Dictionary`2.Values"/>).</summary>
        </member>
        <member name="M:MaszynaPi.MachineLogic.ArchitectureSettings.SetAddressSpace(System.UInt32)">
            <summary>
            Allows to set address space size in instructions (and therefore adress space for machine). <br></br>
            Throws <see cref="T:MaszynaPi.MachineLogic.CPUException"/> if passed value [<see cref="F:MaszynaPi.Defines.ADDRESS_BITS_MIN"/>;<see cref="F:MaszynaPi.Defines.ADDRESS_BITS_MAX"/>] range.
            </summary>
            <param name="newAddressSpace">New address size in bits.</param>
            <exception cref="T:MaszynaPi.MachineLogic.CPUException"></exception>
        </member>
        <member name="M:MaszynaPi.MachineLogic.ArchitectureSettings.SetCodeBits(System.UInt32)">
            <summary>
            Allows to set instruction's opcode size. <br></br>
            Throws <see cref="T:MaszynaPi.MachineLogic.CPUException"/> if passed value not in [<see cref="F:MaszynaPi.Defines.CODE_BITS_MIN"/>;<see cref="F:MaszynaPi.Defines.CODE_BITS_MAX"/>] range.
            </summary>
            <param name="newCodeBits"></param>
            <exception cref="T:MaszynaPi.MachineLogic.CPUException"></exception>
        </member>
        <member name="M:MaszynaPi.MachineLogic.ArchitectureSettings.GetAddressSpace">
            <summary><see cref="F:MaszynaPi.MachineLogic.ArchitectureSettings.AddressSpace"/> getter. </summary>
            <returns>Currently set <see cref="F:MaszynaPi.MachineLogic.ArchitectureSettings.AddressSpace"/> value.</returns>
        </member>
        <member name="M:MaszynaPi.MachineLogic.ArchitectureSettings.GetCodeBits">
            <summary><see cref="F:MaszynaPi.MachineLogic.ArchitectureSettings.CodeBits"/> getter. </summary>
            <returns>Currently set <see cref="F:MaszynaPi.MachineLogic.ArchitectureSettings.CodeBits"/> value.</returns>
        </member>
        <member name="M:MaszynaPi.MachineLogic.ArchitectureSettings.GetWordBits">
            <summary>Calculates current machine's WORD size in bits as sum of opcode+address sizes. </summary>
            <returns>Calculated WORD size in bits.</returns>
        </member>
        <member name="M:MaszynaPi.MachineLogic.ArchitectureSettings.GetMaxWord">
            <summary>Calculates max value that currently set WORD size can store wihout overflowing (unsigned value assumed). </summary>
            <returns>Maximum unsigned number possible to represent within single WORD of machine simulator.</returns>
        </member>
        <member name="M:MaszynaPi.MachineLogic.ArchitectureSettings.GetMaxAddress">
            <summary>Calculates maximum memory adress that can be accessed using currently set <see cref="F:MaszynaPi.MachineLogic.ArchitectureSettings.AddressSpace"/> size.</summary>
            <returns>Address of last memory location that can be adressed.</returns>
        </member>
        <member name="M:MaszynaPi.MachineLogic.ArchitectureSettings.GetMaxOpcode">
            <summary> Calculates maximum opcode, hence the maximum number of instructions that can be encoded.</summary>
            <returns>Max value that opcode segment of machine's WORD can represent.</returns>
        </member>
        <member name="M:MaszynaPi.MachineLogic.ArchitectureSettings.ShrinkToWordLength(System.UInt32)">
            <summary> Shrinks passed <paramref name="value"/> to maximum size of machine's WORD. </summary>
            <param name="value"> Unsigned value to process</param>
            <returns>Minimum of <paramref name="value"/> and current maximum WORD.</returns>
        </member>
        <member name="M:MaszynaPi.MachineLogic.ArchitectureSettings.SetActiveComponents(MaszynaPi.Defines.Components)">
            <summary>Sets active <see cref="T:MaszynaPi.Defines.Components"/> of machine. </summary>
            <param name="active">Encoded components to be set as new active components of machine.</param>
        </member>
        <member name="M:MaszynaPi.MachineLogic.ArchitectureSettings.GetActiveComponents">
            <summary> Encoded active <see cref="T:MaszynaPi.Defines.Components"/> of current <see cref="T:MaszynaPi.Defines.Architecture"/> of machine. </summary>
            <returns><see cref="F:MaszynaPi.MachineLogic.ArchitectureSettings.ActiveComponents"/></returns>
        </member>
        <member name="M:MaszynaPi.MachineLogic.ArchitectureSettings.GetAvaibleSignals">
            <summary> List of microoperations available to use in currently selected architecture. </summary>
            <returns>List of currently <see cref="F:MaszynaPi.MachineLogic.ArchitectureSettings.AvailableSignals"/> </returns>
        </member>
        <member name="M:MaszynaPi.MachineLogic.ArchitectureSettings.GetAvaibleInstructions">
            <summary>
            Returns list of all avaible instructions names, considering the currently set <see cref="F:MaszynaPi.MachineLogic.ArchitectureSettings.CodeBits"/> value <br></br>
            <i>(not always whole set of instructions can be loaded if hardware settings does not provide enough space for encoding)</i>.
            </summary>
            <returns>List containing up to (<see cref="M:MaszynaPi.MachineLogic.ArchitectureSettings.GetMaxOpcode"/>+1) elements, representing instruction names. </returns>
        </member>
        <member name="M:MaszynaPi.MachineLogic.ArchitectureSettings.GetArchitecture">
            <summary> Retreives current <see cref="T:MaszynaPi.Defines.Architecture"/> of machine. </summary>
            <returns><see cref="F:MaszynaPi.MachineLogic.ArchitectureSettings.CurrentArchitecture"/></returns>
        </member>
        <member name="M:MaszynaPi.MachineLogic.ArchitectureSettings.SetArchitecture(MaszynaPi.Defines.Architecture)">
            <summary>Allows to set current <see cref="T:MaszynaPi.Defines.Architecture"/> of machine.</summary>
            <param name="machine">Architecture to set.</param>
        </member>
        <member name="M:MaszynaPi.MachineLogic.ArchitectureSettings.InitializeInterruptVector">
            <summary>
            Initializes interrupt vector dictionary, creating new instance of it, 
            filled with consecutive values from 0 to <see cref="F:MaszynaPi.Defines.INTERRUPTIONS_NUM"/> (as keys - interrupt IDs),
            and reverse sequence (as values - interrupt handler addresses)
            </summary>
        </member>
        <member name="M:MaszynaPi.MachineLogic.ArchitectureSettings.GetInterruptVector">
            <summary>Allows to access data structure mapping interruption-specific bit (<see cref="P:System.Collections.Generic.Dictionary`2.Keys"/>) into memory adresses (<see cref="P:System.Collections.Generic.Dictionary`2.Values"/>).</summary>
            <returns><see cref="F:MaszynaPi.MachineLogic.ArchitectureSettings.InterruptVector"/> instance.</returns>
        </member>
        <member name="M:MaszynaPi.MachineLogic.ArchitectureSettings.SetInterruptVector(System.Collections.Generic.Dictionary{System.UInt32,System.UInt32})">
            <summary> Clears old <see cref="F:MaszynaPi.MachineLogic.ArchitectureSettings.InterruptVector"/> and copies content of <paramref name="newVector"/> instance to it.</summary>
            <param name="newVector"><see cref="T:System.Collections.Generic.Dictionary`2"/> object with new interrupt vector (INTbit-address) pairs.</param>
        </member>
        <member name="M:MaszynaPi.MachineLogic.ArchitectureSettings.GetNumberOfIODevices">
            <summary>
            Should return number of avaible IO devices based on current architecture settings 
            (if <see cref="F:MaszynaPi.MachineLogic.ArchitectureSettings.ActiveComponents"/> change was fully handled in GUI) but currently hardcoded for <see cref="F:MaszynaPi.Defines.Architecture.MachinePI"/> state.
            </summary>
            <returns>Hardcoded value of (<see cref="F:MaszynaPi.Defines.DEFAULT_IO_NUMBER"/> + <see cref="F:MaszynaPi.Defines.EXTENDED_IO_NUMBER"/>)</returns>
        </member>
        <member name="M:MaszynaPi.MachineLogic.ArchitectureSettings.GetAddressSpaceForIO">
            <summary>Calculates how many bits are neccessary to encode all IO Devices addresses.</summary>
            <returns>Minimal number of bits that will allow to assign each IO device it's own address.</returns>
        </member>
        <member name="M:MaszynaPi.MachineLogic.ArchitectureSettings.GetIODeviceID(System.UInt32)">
            <summary> Allows to retreive IO device's ID number, base on its assigned address. <br></br>
            Throws <see cref="T:System.Exception"/> if no device with <paramref name="IOAddress"/> was found in <see cref="F:MaszynaPi.MachineLogic.ArchitectureSettings.IODevices"/> map.</summary>
            <param name="IOAddress">Assigned address of IO device.</param>
            <returns>ID of device with address == <paramref name="IOAddress"/>.</returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:MaszynaPi.MachineLogic.ArchitectureSettings.InitializeIODevicesAddresses">
            <summary>
            Initializes IO device's index-address dictionary, creating new instance of it, filled with consecutive values from 0 to 'max number of devices', 
            for both keys and values of created map (means that device with ID = 0 have address 0 etc.).
            </summary>
        </member>
        <member name="M:MaszynaPi.MachineLogic.ArchitectureSettings.SetIODevicesAddresses(System.Collections.Generic.Dictionary{System.UInt32,System.UInt32})">
            <summary> Clears old <see cref="F:MaszynaPi.MachineLogic.ArchitectureSettings.IODevices"/> and copies content of <paramref name="DevicesAddresses"/> instance to it.</summary>
            <param name="DevicesAddresses"><see cref="T:System.Collections.Generic.Dictionary`2"/> object with new IO device's address-ID pairs.</param>
        </member>
        <member name="T:MaszynaPi.MachineLogic.CPUException">
            <summary>General custom <see cref="T:System.Exception"/> for signalizing errors related to <see cref="T:MaszynaPi.MachineLogic.CentralProcessingUnit"/> data/control flow.</summary>
        </member>
        <member name="T:MaszynaPi.MachineLogic.CentralProcessingUnit">
            <summary> 
            Main monolith class, representing microcomputer's processing unit with its connections to other components such as memory or IO devices.
            Contain set of internal <see cref="T:MaszynaPi.MachineLogic.Architecture.Register"/>, responsible for preserving state of machine between clock cycles.
            Class allows to manage executing instructions by controlling internal components of the machine.<br></br>
            <br></br>Note:<i> The abbreviations for component and signal names are partly abbreviations from Polish,
            in homage to the original naming of the architecture parts of this microcomputer. The English expansion can be found in the comments.</i> 
            </summary>
        </member>
        <member name="F:MaszynaPi.MachineLogic.CentralProcessingUnit.ENDOF_INSTRUCTION">
            <summary>Value for in-instruction tick tracking variables indicating that all cycles of a single instruction have been executed.</summary>
        </member>
        <member name="F:MaszynaPi.MachineLogic.CentralProcessingUnit.FETCH_CYCLE_TICK">
            <summary>In which cycle of single instruction, Fetch must be performed.</summary>
        </member>
        <member name="F:MaszynaPi.MachineLogic.CentralProcessingUnit.InstructionExcecutionTimeout">
            <summary>If <see cref="M:MaszynaPi.MachineLogic.CentralProcessingUnit.ExecuteInstructionCycle"/> method takes more that this value to complete, <see cref="T:System.TimeoutException"/> should be thrown.</summary>
        </member>
        <member name="F:MaszynaPi.MachineLogic.CentralProcessingUnit.SignalsMap">
            <summary> Initialized in <see cref="M:MaszynaPi.MachineLogic.CentralProcessingUnit.InitialazeSignalsMap"/> mapping of singnals names to related <see cref="T:MaszynaPi.MachineLogic.CentralProcessingUnit"/> void methods.</summary>
        </member>
        <member name="F:MaszynaPi.MachineLogic.CentralProcessingUnit.ActiveSignals">
            <summary>List of signals active in current clock cycle.</summary>
        </member>
        <member name="F:MaszynaPi.MachineLogic.CentralProcessingUnit.USE_DEBUGGER">
            <summary> Flag indicating whenever <see cref="T:MaszynaPi.MachineAssembler.Debugger"/> class should be carring UI machine state preview.</summary>
        </member>
        <member name="F:MaszynaPi.MachineLogic.CentralProcessingUnit.LastTick">
            <summary> Keeps track current cycle of single instruction execution. </summary> 
        </member>
        <member name="F:MaszynaPi.MachineLogic.CentralProcessingUnit.InstrDecoder">
            <summary>Decoder providing methods to determine next machine state base on instructions from <see cref="T:MaszynaPi.MachineLogic.Architecture.Memory"/>.</summary>
        </member>
        <member name="F:MaszynaPi.MachineLogic.CentralProcessingUnit.IntController">
            <summary> Interruptions controller, providing methods to determine next machine state base on various interrupts sources. </summary>
        </member>
        <member name="F:MaszynaPi.MachineLogic.CentralProcessingUnit.IOController">
            <summary> Controller providing methods for controlling state of input/output devices (except <see cref="T:MaszynaPi.MachineLogic.Architecture.Memory"/>) connected to machine.</summary>
        </member>
        <member name="P:MaszynaPi.MachineLogic.CentralProcessingUnit.PaO">
            <summary> Operational Code and Data Memory </summary>
        </member>
        <member name="P:MaszynaPi.MachineLogic.CentralProcessingUnit.MagA">
            <summary>Address Bus</summary>
        </member>
        <member name="P:MaszynaPi.MachineLogic.CentralProcessingUnit.MagS">
            <summary>Data Bus</summary>
        </member>
        <member name="P:MaszynaPi.MachineLogic.CentralProcessingUnit.MagT">
            <summary>Address-Data Transition Bus (address space sized)</summary>
        </member>
        <member name="P:MaszynaPi.MachineLogic.CentralProcessingUnit.JAL">
            <summary>Machine's Arithmetic Logic Unit</summary>
        </member>
        <member name="P:MaszynaPi.MachineLogic.CentralProcessingUnit.A">
            <summary>Address Register - allows to address <see cref="P:MaszynaPi.MachineLogic.CentralProcessingUnit.PaO"/> access.</summary>
        </member>
        <member name="P:MaszynaPi.MachineLogic.CentralProcessingUnit.S">
            <summary>Value Register - output for <see cref="P:MaszynaPi.MachineLogic.CentralProcessingUnit.PaO"/> values.</summary>
        </member>
        <member name="P:MaszynaPi.MachineLogic.CentralProcessingUnit.AK">
            <summary>Accumulator - output register of <see cref="P:MaszynaPi.MachineLogic.CentralProcessingUnit.JAL"/></summary>
        </member>
        <member name="P:MaszynaPi.MachineLogic.CentralProcessingUnit.F">
            <summary>Flag register - contains <see cref="T:MaszynaPi.MachineLogic.Architecture.ALUFlags"/> values set by <see cref="P:MaszynaPi.MachineLogic.CentralProcessingUnit.JAL"/>.</summary>
        </member>
        <member name="P:MaszynaPi.MachineLogic.CentralProcessingUnit.L">
            <summary>Instruction pointer register. Stores address of next instruction.</summary>
        </member>
        <member name="P:MaszynaPi.MachineLogic.CentralProcessingUnit.I">
            <summary>Current Instruction register.</summary>
        </member>
        <member name="P:MaszynaPi.MachineLogic.CentralProcessingUnit.X">
            <summary>Additional general-purpose register X</summary>
        </member>
        <member name="P:MaszynaPi.MachineLogic.CentralProcessingUnit.Y">
            <summary>Additional general-purpose register Y</summary>
        </member>
        <member name="P:MaszynaPi.MachineLogic.CentralProcessingUnit.WS">
            <summary>Stack register - point to top of the stack.</summary>
        </member>
        <member name="P:MaszynaPi.MachineLogic.CentralProcessingUnit.RB">
            <summary>Buffer for communication with IO Devices.</summary>
        </member>
        <member name="P:MaszynaPi.MachineLogic.CentralProcessingUnit.G">
            <summary>1 bit IO Device Ready register.</summary>
        </member>
        <member name="P:MaszynaPi.MachineLogic.CentralProcessingUnit.RZ">
            <summary>4 bit Interruption Report register.</summary>
        </member>
        <member name="P:MaszynaPi.MachineLogic.CentralProcessingUnit.RM">
            <summary>4 bit Interruption Mask register.</summary>
        </member>
        <member name="P:MaszynaPi.MachineLogic.CentralProcessingUnit.RP">
            <summary>4 bit register storing info about accepted Interrupt.</summary>
        </member>
        <member name="P:MaszynaPi.MachineLogic.CentralProcessingUnit.AP">
            <summary>Interrupt Vector register.</summary>
        </member>
        <member name="F:MaszynaPi.MachineLogic.CentralProcessingUnit.TextInput">
            <summary><see cref="T:MaszynaPi.MachineLogic.IODevices.CharacterInput"/> controller, for managing getting characters from assigned input device.</summary>
        </member>
        <member name="F:MaszynaPi.MachineLogic.CentralProcessingUnit.TextOutput">
            <summary><see cref="T:MaszynaPi.MachineLogic.IODevices.CharacterInput"/> controller, for managing putting characters to assigned output device.</summary>
        </member>
        <member name="F:MaszynaPi.MachineLogic.CentralProcessingUnit.TemperatureInput">
            <summary>SenseHat additional IO controller, managing reading data from module's temperature sensor using <i>SensorsHandler.py</i> script.</summary>
        </member>
        <member name="F:MaszynaPi.MachineLogic.CentralProcessingUnit.HumidityInput">
            <summary>SenseHat additional IO controller, managing reading data from module's humidity sensor using <i>SensorsHandler.py</i> script</summary>
        </member>
        <member name="F:MaszynaPi.MachineLogic.CentralProcessingUnit.PressureInput">
            <summary>SenseHat additional IO controller, managing reading data from module's pressure sensor using <i>SensorsHandler.py</i> script</summary>
        </member>
        <member name="F:MaszynaPi.MachineLogic.CentralProcessingUnit.MatrixOutput">
            <summary>SenseHat additional IO controller, managing writing data to module's LED Matrix, using <i>MatrixHandler.py</i> script</summary>
        </member>
        <member name="M:MaszynaPi.MachineLogic.CentralProcessingUnit.#ctor">
            <summary>
            Creates new CPU's instance, initialized with defined <see cref="T:MaszynaPi.MachineLogic.ArchitectureSettings"/>
            and microinstructions set, connected to selected <see cref="P:MaszynaPi.Defines.LangInUse"/>.
            <br></br><br></br>
            Note: <i>Updating simulator to support different <see cref="T:MaszynaPi.Defines.Architecture"/> during runtime,
            requires internal section of bitsize-related values initializaiton to be relocated into separate function
            (part of component's sizes depends on architecture)</i>.
            </summary>
        </member>
        <member name="M:MaszynaPi.MachineLogic.CentralProcessingUnit.InitialazeSignalsMap">
            <summary>
            Initializes map of signals, where each signal method is defined by it's string name.
            <br></br>(Note: Custom [Attribute] for signal methods could be used to create map 'automatically'.)
            </summary>
        </member>
        <member name="F:MaszynaPi.MachineLogic.CentralProcessingUnit.OnRefreshValues">
            <summary>Allows to define action responsible for refreshing CPU components representation in GUI.</summary>
        </member>
        <member name="F:MaszynaPi.MachineLogic.CentralProcessingUnit.SetPaintActiveSignals">
            <summary>Allows to define action responsible for signalizing in that GUI that signals repaint is neccessary.</summary>
        </member>
        <member name="F:MaszynaPi.MachineLogic.CentralProcessingUnit.OnSetExecutedLine">
            <summary>Allows to define action responsible for showing currently executed line of program. Invoked each single instruction.</summary>
        </member>
        <member name="F:MaszynaPi.MachineLogic.CentralProcessingUnit.OnSetExecutedMicroinstruction">
            <summary>Allows to define action responsible for showing currently executed microinstruction. Invoked each cycle.</summary>
        </member>
        <member name="F:MaszynaPi.MachineLogic.CentralProcessingUnit.OnProgramEnd">
            <summary>Allows to define action invoked when <see cref="M:MaszynaPi.MachineLogic.CentralProcessingUnit.stop"/> signal is activated.</summary>
        </member>
        <member name="F:MaszynaPi.MachineLogic.CentralProcessingUnit.CheckProgramBreak">
            <summary>Allows to define function returning value indicating whenever loop running whole program should be halted.</summary>
        </member>
        <member name="M:MaszynaPi.MachineLogic.CentralProcessingUnit.RefreshValues">
            <summary>Invoke of <see cref="F:MaszynaPi.MachineLogic.CentralProcessingUnit.OnRefreshValues"/> <see cref="T:System.Action"/>.</summary>
        </member>
        <member name="M:MaszynaPi.MachineLogic.CentralProcessingUnit.SetExecutedLineInEditor(System.UInt32)">
            <summary>Invoke of <see cref="F:MaszynaPi.MachineLogic.CentralProcessingUnit.OnSetExecutedLine"/> <see cref="T:System.Action"/>.</summary>
        </member>
        <member name="M:MaszynaPi.MachineLogic.CentralProcessingUnit.SetExecutedMicroinstructions">
            <summary>Invoke of <see cref="F:MaszynaPi.MachineLogic.CentralProcessingUnit.OnSetExecutedMicroinstruction"/> <see cref="T:System.Action"/> with current instruction's opcode and <see cref="F:MaszynaPi.MachineLogic.CentralProcessingUnit.ActiveSignals"/> list.</summary>
        </member>
        <member name="M:MaszynaPi.MachineLogic.CentralProcessingUnit.DoesEnlapsedSinceEvent(System.DateTime,System.TimeSpan)">
            <summary>Check if <paramref name="time"/> enlapsed since <paramref name="event"/> has occured using <see cref="P:System.DateTime.Now"/>.</summary>
            <param name="event">Saved <see cref="T:System.DateTime"/> when event occured.</param>
            <param name="time">Amout of time that should pass.</param>
            <returns>true if since <paramref name="event"/>, <paramref name="time"/> passed, false otherwise.</returns>
        </member>
        <member name="M:MaszynaPi.MachineLogic.CentralProcessingUnit.FetchInstruction">
            <summary>Assigns <see cref="P:MaszynaPi.Defines.FETCH_SIGNALS"/> to currently <see cref="F:MaszynaPi.MachineLogic.CentralProcessingUnit.ActiveSignals"/> list.</summary>
        </member>
        <member name="M:MaszynaPi.MachineLogic.CentralProcessingUnit.ExecuteTick(System.Int32,System.Boolean)">
            <summary>Executes single 'tick' of CPU, base on current machine state. Sets <see cref="F:MaszynaPi.MachineLogic.CentralProcessingUnit.ActiveSignals"/> list.</summary>
            <param name="tick">Number (index) of consecutive tick of currently executed instruction. Defaults to 0 (see <see cref="F:MaszynaPi.MachineLogic.CentralProcessingUnit.FETCH_CYCLE_TICK"/>).</param>
            <param name="manual">Indicates whenever active signals (<see cref="F:MaszynaPi.MachineLogic.CentralProcessingUnit.ActiveSignals"/> content) are selected by user in manual mode (true). Defaults to false.</param>
            <returns>Index of current instruction's tick that should be executed, or <see cref="F:MaszynaPi.MachineLogic.CentralProcessingUnit.ENDOF_INSTRUCTION"/> if all instruction's cycles were performed.</returns>
        </member>
        <member name="M:MaszynaPi.MachineLogic.CentralProcessingUnit.ExecuteInstructionCycle">
            <summary>
            Performes all CPU's steps neccessary for executing whole instruction. 
            Invokes all methods responsible for full Fetch-Decode-Execute cycle.
            </summary>
        </member>
        <member name="M:MaszynaPi.MachineLogic.CentralProcessingUnit.ExecuteProgram">
            <summary>
            Executes all program instrucitons from current instruction register address to first instruction with opcode 0.
            Disables connected <see cref="T:MaszynaPi.MachineAssembler.Debugger"/> actions until end of program execution, due to performace issues,
            related to displaing CPU state in user interface. 
            <br></br>On any error, raises <see cref="T:MaszynaPi.MachineLogic.CPUException"/> with informations about currently executed instruction address, as well as active signals.
            </summary>
            <exception cref="T:MaszynaPi.MachineLogic.CPUException"></exception>
        </member>
        <member name="M:MaszynaPi.MachineLogic.CentralProcessingUnit.SetMemoryContent(System.UInt32,System.UInt32)">
            <summary>Allows to set single value in <see cref="F:MaszynaPi.MachineLogic.Architecture.Memory.Content"/>.</summary>
            <param name="addr">Address of value to set.</param>
            <param name="value">Value to set</param>
        </member>
        <member name="M:MaszynaPi.MachineLogic.CentralProcessingUnit.SetMemoryContent(System.Collections.Generic.List{System.UInt32},System.UInt32)">
            <summary>Allows to set multiple values in <see cref="F:MaszynaPi.MachineLogic.Architecture.Memory.Content"/>, beggining at <paramref name="offset"/> address. Size of memory is not checked here!</summary>
            <param name="values">List of values to set.</param>
            <param name="offset">Begining offset from adress 0.</param>
        </member>
        <member name="M:MaszynaPi.MachineLogic.CentralProcessingUnit.GetMemoryContent(System.UInt32)">
            <summary>Allows to get single value from <see cref="F:MaszynaPi.MachineLogic.Architecture.Memory.Content"/>.</summary>
            <param name="addr">Address of value</param>
            <returns>Value stored under address <paramref name="addr"/>.</returns>
        </member>
        <member name="M:MaszynaPi.MachineLogic.CentralProcessingUnit.GetMemoryContent(System.UInt32,System.UInt32)">
            <summary>Allows to retreive selected section of <see cref="F:MaszynaPi.MachineLogic.Architecture.Memory.Content"/>.</summary>
            <param name="addr">Starting address of section.</param>
            <param name="size">Size of section to retreive.</param>
            <returns>Range of <see cref="F:MaszynaPi.MachineLogic.Architecture.Memory.Content"/> defined by starting <paramref name="addr"/> and <paramref name="size"/>.</returns>
        </member>
        <member name="M:MaszynaPi.MachineLogic.CentralProcessingUnit.GetMemoryContentHandle">
            <summary>
            Retreives instance of list of <see cref="T:System.UInt32"/> values, from internal <see cref="T:MaszynaPi.MachineLogic.Architecture.Memory"/> component, representing 
            contents of microcomputer's memory.
            </summary>
            <returns>List instance where <see cref="T:MaszynaPi.MachineLogic.Architecture.Memory"/> content is stored.</returns>
        </member>
        <member name="M:MaszynaPi.MachineLogic.CentralProcessingUnit.ChangeMemorySize(System.UInt32)">
            <summary>
            Allows to change size of CPU's visible <see cref="T:MaszynaPi.MachineLogic.Architecture.Memory"/> base on currently set <see cref="F:MaszynaPi.MachineLogic.ArchitectureSettings.AddressSpace"/>. 
            <br></br>Memory can both grow and shrink - it preserves its content, except cells that are potentially removed when shrinking.
            </summary>
            <param name="oldAddrSpace">Value of addressing bitsize before changed in <see cref="F:MaszynaPi.MachineLogic.ArchitectureSettings.AddressSpace"/></param>
        </member>
        <member name="M:MaszynaPi.MachineLogic.CentralProcessingUnit.ResetMemory">
            <summary>Calls <see cref="M:MaszynaPi.MachineLogic.Architecture.Memory.Reset"/> method that sets memory back to it's default state (filed with <see cref="F:MaszynaPi.Defines.DEFAULT_MEM_VAL"/>).</summary>
        </member>
        <member name="M:MaszynaPi.MachineLogic.CentralProcessingUnit.SetActiveSignals(System.Collections.Generic.List{System.String})">
            <summary>Allows to set CPU's <see cref="F:MaszynaPi.MachineLogic.CentralProcessingUnit.ActiveSignals"/>.</summary>
            <param name="handActivatedSignals">Names of signals that should be set active.</param>
        </member>
        <member name="M:MaszynaPi.MachineLogic.CentralProcessingUnit.ManualInstruction">
            <summary>
            Invokes "<see cref="M:MaszynaPi.MachineLogic.CentralProcessingUnit.ExecuteInstructionCycle"/>" method on CPU. Performs all microoperations neccessary for executing whole instruction.
            <br></br><b>Not avaible if 'ManualControl' signal is active.</b>
            </summary>
        </member>
        <member name="M:MaszynaPi.MachineLogic.CentralProcessingUnit.ManualProgram">
            <summary>
            Invokes "<see cref="M:MaszynaPi.MachineLogic.CentralProcessingUnit.ExecuteProgram"/>" method on CPU. Performs all microoperations neccessary for executing all loaded instructions, until instruction '0' is found.
            <br></br><b>Not avaible if 'ManualControl' signal is active.</b>
            </summary>
        </member>
        <member name="M:MaszynaPi.MachineLogic.CentralProcessingUnit.ManualTick(System.Collections.Generic.List{System.String})">
            <summary>Allows to invoke <see cref="M:MaszynaPi.MachineLogic.CentralProcessingUnit.ExecuteTick(System.Int32,System.Boolean)"/> method. Updates CPU state base on provided list of <paramref name="activeSigs"/>.</summary>
            <param name="activeSigs">
            List of names of CPU's signals that specifies which operations should be performed. 
            If 'null' (default), executes from current CPU state.
            </param>
        </member>
        <member name="M:MaszynaPi.MachineLogic.CentralProcessingUnit.EnableDebugger">
            <summary>Sets flag that enables passing CPU's state info to user interface via 
            <see cref="F:MaszynaPi.MachineLogic.CentralProcessingUnit.OnSetExecutedLine"/> and <see cref="F:MaszynaPi.MachineLogic.CentralProcessingUnit.OnSetExecutedMicroinstruction"/> <see cref="T:System.Action"/>s.</summary>
        </member>
        <member name="M:MaszynaPi.MachineLogic.CentralProcessingUnit.DisableDebugger">
            <summary>Disables flag that indicates if state of CPU should be passed into user interface via connected <see cref="T:System.Action"/>s.</summary>
        </member>
        <member name="M:MaszynaPi.MachineLogic.CentralProcessingUnit.GetActiveSignals">
            <summary>Allows to retreive list of <see cref="F:MaszynaPi.MachineLogic.CentralProcessingUnit.ActiveSignals"/>.</summary>
            <returns>Names of signals currently active in CPU.</returns>
        </member>
        <member name="M:MaszynaPi.MachineLogic.CentralProcessingUnit.GetTextInputBufferHandle">
            <summary>Allows to retreive handle to character buffer list instance from <see cref="F:MaszynaPi.MachineLogic.CentralProcessingUnit.TextInput"/> component.</summary>
            <returns>Instance of <see cref="T:System.Collections.Generic.Queue`1"/>, containing <see cref="F:MaszynaPi.MachineLogic.CentralProcessingUnit.TextInput"/> unprocessed data.</returns>
        </member>
        <member name="M:MaszynaPi.MachineLogic.CentralProcessingUnit.SetOnFetchCharAction(System.Action)">
            <summary>Allows to set <see cref="F:MaszynaPi.MachineLogic.CentralProcessingUnit.TextInput"/> <see cref="F:MaszynaPi.MachineLogic.IODevices.CharacterInput.OnCharacterFetched"/> <see cref="T:System.Action"/>.</summary>
            <param name="characterFetched"><see cref="T:System.Action"/> that should be performed when CPU fetches single character from text input's buffer.</param>
        </member>
        <member name="M:MaszynaPi.MachineLogic.CentralProcessingUnit.GetTextOutputBufferHandle">
            <summary>Allows to retreive handle to character buffer list instance from <see cref="F:MaszynaPi.MachineLogic.CentralProcessingUnit.TextOutput"/> component.</summary>
            <returns>Instance of <see cref="T:System.Collections.Generic.List`1"/>, containing <see cref="F:MaszynaPi.MachineLogic.CentralProcessingUnit.TextOutput"/> unprocessed data.</returns>
        </member>
        <member name="M:MaszynaPi.MachineLogic.CentralProcessingUnit.SetOnPushCharAction(System.Action)">
            <summary>Allows to set <see cref="F:MaszynaPi.MachineLogic.CentralProcessingUnit.TextOutput"/> <see cref="F:MaszynaPi.MachineLogic.IODevices.CharacterOutput.OnCharacterPushed"/> <see cref="T:System.Action"/>.</summary>
            <param name="characterPushed"><see cref="T:System.Action"/> that should be performed when CPU puts single character into text output's buffer.</param>
        </member>
        <member name="M:MaszynaPi.MachineLogic.CentralProcessingUnit.SetOnInterruptReportedAction(System.Action)">
            <summary>Allows to set <see cref="F:MaszynaPi.MachineLogic.CentralProcessingUnit.IntController"/> <see cref="F:MaszynaPi.MachineLogic.Architecture.InterruptionController.OnInterruptReported"/> <see cref="T:System.Action"/>.</summary>
            <param name="interruptReported"><see cref="T:System.Action"/> that should be performed when interrupt is first reported to CPU in <see cref="P:MaszynaPi.MachineLogic.CentralProcessingUnit.RZ"/> register.</param>
        </member>
        <member name="M:MaszynaPi.MachineLogic.CentralProcessingUnit.SetLEDMatrixModeLetter">
            <summary>Sets <see cref="F:MaszynaPi.MachineLogic.IODevices.MatrixLED.Mode.Letter"></see> in Matrix IO handler, <see cref="F:MaszynaPi.MachineLogic.CentralProcessingUnit.MatrixOutput"/>.</summary>
        </member>
        <member name="M:MaszynaPi.MachineLogic.CentralProcessingUnit.SetLEDMatrixModePaint">
            <summary>Sets <see cref="F:MaszynaPi.MachineLogic.IODevices.MatrixLED.Mode.Paint"></see> in Matrix IO handler, <see cref="F:MaszynaPi.MachineLogic.CentralProcessingUnit.MatrixOutput"/>.</summary>
        </member>
        <member name="M:MaszynaPi.MachineLogic.CentralProcessingUnit.GetALUFlags">
            <summary>Allows to retreive <see cref="T:MaszynaPi.MachineLogic.Architecture.ArithmeticLogicUnit"/>'s, <see cref="T:MaszynaPi.MachineLogic.Architecture.ALUFlags"/> state.</summary>
            <returns>Currently active <see cref="T:MaszynaPi.MachineLogic.Architecture.ALUFlags"/> from CPU's ALU instance.</returns>
        </member>
        <member name="M:MaszynaPi.MachineLogic.CentralProcessingUnit.ResetRegisters">
            <summary>
            Activates Reset() in all resetable components of <see cref="T:MaszynaPi.MachineLogic.CentralProcessingUnit"/> (Could be handled by simple <b>IResetable</b>).
            Clears <see cref="F:MaszynaPi.MachineLogic.CentralProcessingUnit.ActiveSignals"/> and sets default value -1 of <see cref="F:MaszynaPi.MachineLogic.CentralProcessingUnit.LastTick"/> field.
            </summary>
        </member>
        <member name="M:MaszynaPi.MachineLogic.CentralProcessingUnit.SetComponentsBitsizes">
            <summary>
            Sets bitsizes in all related components, such as <see cref="T:MaszynaPi.MachineLogic.Architecture.Register"/>s or <see cref="T:MaszynaPi.MachineLogic.Architecture.Bus"/>es, base on current <see cref="T:MaszynaPi.MachineLogic.ArchitectureSettings"/>.
            </summary>
        </member>
        <member name="F:MaszynaPi.MachineUI.UserControlBus.components">
            <summary> 
            Wymagana zmienna projektanta.
            </summary>
        </member>
        <member name="M:MaszynaPi.MachineUI.UserControlBus.Dispose(System.Boolean)">
            <summary> 
            Wyczyść wszystkie używane zasoby.
            </summary>
            <param name="disposing">prawda, jeżeli zarządzane zasoby powinny zostać zlikwidowane; Fałsz w przeciwnym wypadku.</param>
        </member>
        <member name="M:MaszynaPi.MachineUI.UserControlBus.InitializeComponent">
            <summary> 
            Metoda wymagana do obsługi projektanta — nie należy modyfikować 
            jej zawartości w edytorze kodu.
            </summary>
        </member>
        <member name="F:MaszynaPi.MachineUI.UserControlCharacterOutput.components">
            <summary> 
            Wymagana zmienna projektanta.
            </summary>
        </member>
        <member name="M:MaszynaPi.MachineUI.UserControlCharacterOutput.Dispose(System.Boolean)">
            <summary> 
            Wyczyść wszystkie używane zasoby.
            </summary>
            <param name="disposing">prawda, jeżeli zarządzane zasoby powinny zostać zlikwidowane; Fałsz w przeciwnym wypadku.</param>
        </member>
        <member name="M:MaszynaPi.MachineUI.UserControlCharacterOutput.InitializeComponent">
            <summary> 
            Metoda wymagana do obsługi projektanta — nie należy modyfikować 
            jej zawartości w edytorze kodu.
            </summary>
        </member>
        <member name="F:MaszynaPi.MachineUI.UserControlIntButton.components">
            <summary> 
            Wymagana zmienna projektanta.
            </summary>
        </member>
        <member name="M:MaszynaPi.MachineUI.UserControlIntButton.Dispose(System.Boolean)">
            <summary> 
            Wyczyść wszystkie używane zasoby.
            </summary>
            <param name="disposing">prawda, jeżeli zarządzane zasoby powinny zostać zlikwidowane; Fałsz w przeciwnym wypadku.</param>
        </member>
        <member name="M:MaszynaPi.MachineUI.UserControlIntButton.InitializeComponent">
            <summary> 
            Metoda wymagana do obsługi projektanta — nie należy modyfikować 
            jej zawartości w edytorze kodu.
            </summary>
        </member>
        <member name="F:MaszynaPi.MachineUI.UserControlSignalWire.components">
            <summary> 
            Wymagana zmienna projektanta.
            </summary>
        </member>
        <member name="M:MaszynaPi.MachineUI.UserControlSignalWire.Dispose(System.Boolean)">
            <summary> 
            Wyczyść wszystkie używane zasoby.
            </summary>
            <param name="disposing">prawda, jeżeli zarządzane zasoby powinny zostać zlikwidowane; Fałsz w przeciwnym wypadku.</param>
        </member>
        <member name="M:MaszynaPi.MachineUI.UserControlSignalWire.InitializeComponent">
            <summary> 
            Metoda wymagana do obsługi projektanta — nie należy modyfikować 
            jej zawartości w edytorze kodu.
            </summary>
        </member>
        <member name="F:MaszynaPi.MachineUI.UserControlCharacterInput.components">
            <summary> 
            Wymagana zmienna projektanta.
            </summary>
        </member>
        <member name="M:MaszynaPi.MachineUI.UserControlCharacterInput.Dispose(System.Boolean)">
            <summary> 
            Wyczyść wszystkie używane zasoby.
            </summary>
            <param name="disposing">prawda, jeżeli zarządzane zasoby powinny zostać zlikwidowane; Fałsz w przeciwnym wypadku.</param>
        </member>
        <member name="M:MaszynaPi.MachineUI.UserControlCharacterInput.InitializeComponent">
            <summary> 
            Metoda wymagana do obsługi projektanta — nie należy modyfikować 
            jej zawartości w edytorze kodu.
            </summary>
        </member>
        <member name="F:MaszynaPi.MachineUI.UserControlCodeEditor.components">
            <summary> 
            Wymagana zmienna projektanta.
            </summary>
        </member>
        <member name="M:MaszynaPi.MachineUI.UserControlCodeEditor.Dispose(System.Boolean)">
            <summary> 
            Wyczyść wszystkie używane zasoby.
            </summary>
            <param name="disposing">prawda, jeżeli zarządzane zasoby powinny zostać zlikwidowane; Fałsz w przeciwnym wypadku.</param>
        </member>
        <member name="M:MaszynaPi.MachineUI.UserControlCodeEditor.InitializeComponent">
            <summary> 
            Metoda wymagana do obsługi projektanta — nie należy modyfikować 
            jej zawartości w edytorze kodu.
            </summary>
        </member>
        <member name="F:MaszynaPi.MachineUI.UserControlInstructionList.components">
            <summary> 
            Wymagana zmienna projektanta.
            </summary>
        </member>
        <member name="M:MaszynaPi.MachineUI.UserControlInstructionList.Dispose(System.Boolean)">
            <summary> 
            Wyczyść wszystkie używane zasoby.
            </summary>
            <param name="disposing">prawda, jeżeli zarządzane zasoby powinny zostać zlikwidowane; Fałsz w przeciwnym wypadku.</param>
        </member>
        <member name="M:MaszynaPi.MachineUI.UserControlInstructionList.InitializeComponent">
            <summary> 
            Metoda wymagana do obsługi projektanta — nie należy modyfikować 
            jej zawartości w edytorze kodu.
            </summary>
        </member>
        <member name="F:MaszynaPi.MachineUI.UserControlInstructionMicrocode.components">
            <summary> 
            Wymagana zmienna projektanta.
            </summary>
        </member>
        <member name="M:MaszynaPi.MachineUI.UserControlInstructionMicrocode.Dispose(System.Boolean)">
            <summary> 
            Wyczyść wszystkie używane zasoby.
            </summary>
            <param name="disposing">prawda, jeżeli zarządzane zasoby powinny zostać zlikwidowane; Fałsz w przeciwnym wypadku.</param>
        </member>
        <member name="M:MaszynaPi.MachineUI.UserControlInstructionMicrocode.InitializeComponent">
            <summary> 
            Metoda wymagana do obsługi projektanta — nie należy modyfikować 
            jej zawartości w edytorze kodu.
            </summary>
        </member>
        <member name="F:MaszynaPi.MachineUI.UserControlMemory.VISIBLE_MEMORY_SIZE">
            <summary>Lines of memory generated in control when <see cref="P:MaszynaPi.MachineUI.UserControlMemory.PartiallySupressRefreshing"/> enabled.</summary>
        </member>
        <member name="P:MaszynaPi.MachineUI.UserControlMemory.PartiallySupressRefreshing">
            <summary>Sets flag that indicates if <see cref="M:MaszynaPi.MachineUI.UserControlMemory.Refresh"/> overload should refresh only visible parts of memory control.</summary>
        </member>
        <member name="F:MaszynaPi.MachineUI.UserControlMemory.components">
            <summary> 
            Wymagana zmienna projektanta.
            </summary>
        </member>
        <member name="M:MaszynaPi.MachineUI.UserControlMemory.Dispose(System.Boolean)">
            <summary> 
            Wyczyść wszystkie używane zasoby.
            </summary>
            <param name="disposing">prawda, jeżeli zarządzane zasoby powinny zostać zlikwidowane; Fałsz w przeciwnym wypadku.</param>
        </member>
        <member name="M:MaszynaPi.MachineUI.UserControlMemory.InitializeComponent">
            <summary> 
            Metoda wymagana do obsługi projektanta — nie należy modyfikować 
            jej zawartości w edytorze kodu.
            </summary>
        </member>
        <member name="F:MaszynaPi.MachineUI.UserControlRegister.components">
            <summary> 
            Wymagana zmienna projektanta.
            </summary>
        </member>
        <member name="M:MaszynaPi.MachineUI.UserControlRegister.Dispose(System.Boolean)">
            <summary> 
            Wyczyść wszystkie używane zasoby.
            </summary>
            <param name="disposing">prawda, jeżeli zarządzane zasoby powinny zostać zlikwidowane; Fałsz w przeciwnym wypadku.</param>
        </member>
        <member name="M:MaszynaPi.MachineUI.UserControlRegister.InitializeComponent">
            <summary> 
            Metoda wymagana do obsługi projektanta — nie należy modyfikować 
            jej zawartości w edytorze kodu.
            </summary>
        </member>
        <member name="T:MaszynaPi.SenseHatHandlers.SenseHatException">
            <summary>General custom <see cref="T:System.Exception"/> for signalizing errors related to <see cref="T:MaszynaPi.SenseHatHandlers.SenseHatDevice"/> data/control flow.</summary>
        </member>
        <member name="T:MaszynaPi.SenseHatHandlers.SenseHatDevice">
            <summary>
            Base class for CPU's IO devices represented by RaspberryPI SenseHat module's devices.
            </summary>
        </member>
        <member name="F:MaszynaPi.SenseHatHandlers.SenseHatDevice.SENSOR_TEMPERATURE">
            <summary>Selector argument for <see cref="F:MaszynaPi.SenseHatHandlers.SenseHatDevice.SENSOR_SCRIPT"/>, indicatinig temperature read.</summary>
        </member>
        <member name="F:MaszynaPi.SenseHatHandlers.SenseHatDevice.SENSOR_PRESSURE">
            <summary>Selector argument for <see cref="F:MaszynaPi.SenseHatHandlers.SenseHatDevice.SENSOR_SCRIPT"/>, indicatinig pressure read.</summary>
        </member>
        <member name="F:MaszynaPi.SenseHatHandlers.SenseHatDevice.SENSOR_HUMIDITY">
            <summary>Selector argument for <see cref="F:MaszynaPi.SenseHatHandlers.SenseHatDevice.SENSOR_SCRIPT"/>, indicatinig humidity read.</summary>
        </member>
        <member name="F:MaszynaPi.SenseHatHandlers.SenseHatDevice.SENSOR_SCRIPT">
            <summary>Path to python script performing communitation with SenseHat's sensors. Default in .exe scripts/ dir.</summary>
        </member>
        <member name="F:MaszynaPi.SenseHatHandlers.SenseHatDevice.JOYSTICK_SCRIPT">
            <summary>Path to python script performing communitation with SenseHat's joystick output. Default in .exe scripts/ dir.</summary>
        </member>
        <member name="F:MaszynaPi.SenseHatHandlers.SenseHatDevice.MATRIX_SCRIPT">
            <summary>Path to python script performing communitation with SenseHat's matrix. Default in .exe scripts/ dir.</summary>
        </member>
        <member name="F:MaszynaPi.SenseHatHandlers.SenseHatDevice.JOYSTICK_POS_PRESS">
            <summary>Stdout message from <see cref="F:MaszynaPi.SenseHatHandlers.SenseHatDevice.JOYSTICK_SCRIPT"/> that indicates joystick was pressed</summary>
        </member>
        <member name="F:MaszynaPi.SenseHatHandlers.SenseHatDevice.JoystickPosIntMap">
            <summary>Maps joystick position string from <see cref="F:MaszynaPi.SenseHatHandlers.SenseHatDevice.JOYSTICK_SCRIPT"/> std output into interrupt priority.</summary>
        </member>
        <member name="F:MaszynaPi.SenseHatHandlers.SenseHatDevice.StartPythonCMD">
            <summary>Command for starting python script.</summary>
        </member>
        <member name="M:MaszynaPi.SenseHatHandlers.SenseHatDevice.#ctor">
            <summary>Creates new <see cref="T:MaszynaPi.SenseHatHandlers.SenseHatDevice"/> instance initialized with received data '0'.</summary>
        </member>
        <member name="M:MaszynaPi.SenseHatHandlers.SenseHatDevice.CreateReadProcess(System.String)">
            <summary>
            Creates new <see cref="F:MaszynaPi.SenseHatHandlers.SenseHatDevice.StartPythonCMD"/> process using <paramref name="cmd"/> as script argument.
            If current platform is not <see cref="F:System.PlatformID.Unix"/>, returns wihout creating <see cref="F:MaszynaPi.SenseHatHandlers.SenseHatDevice.ReadProcess"/>.
            </summary>
            <param name="cmd">Path to python script that should be called</param>
        </member>
        <member name="M:MaszynaPi.SenseHatHandlers.SenseHatDevice.GetData">
            <summary>
            Allows to retreive single standard-output data from stript that's executing in <see cref="F:MaszynaPi.SenseHatHandlers.SenseHatDevice.ReadProcess"/>.
            Method watis for <see cref="F:MaszynaPi.SenseHatHandlers.SenseHatDevice.ReadProcess"/> to end with <see cref="F:System.Threading.Timeout.Infinite"/>. Script must not 
            get into infinite loop to avoid blocking.
            <br></br>Throws <see cref="T:MaszynaPi.SenseHatHandlers.SenseHatException"/> if <see cref="F:MaszynaPi.SenseHatHandlers.SenseHatDevice.ReadProcess"/> is null or error occurs while reading data.
            </summary>
            <returns>String instance containing data read from <see cref="F:MaszynaPi.SenseHatHandlers.SenseHatDevice.ReadProcess"></see> <see cref="P:System.Diagnostics.Process.StandardOutput"/>.</returns>
            <exception cref="T:MaszynaPi.SenseHatHandlers.SenseHatException"></exception>
        </member>
        <member name="M:MaszynaPi.SenseHatHandlers.SenseHatDevice.SendData(System.String)">
            <summary>
            Creates new <see cref="T:System.Diagnostics.Process"/> using <see cref="F:MaszynaPi.SenseHatHandlers.SenseHatDevice.StartPythonCMD"/> and passes <paramref name="cmd"/> as argument to script.
            Method watis for exit with <see cref="F:System.Threading.Timeout.Infinite"/>. Script must not get into infinite loop to avoid blocking.
            <br></br>Throws <see cref="T:MaszynaPi.SenseHatHandlers.SenseHatException"/> if error occurs during process execution.
            </summary>
            <exception cref="T:MaszynaPi.SenseHatHandlers.SenseHatException"></exception>
        </member>
        <member name="M:MaszynaPi.SenseHatHandlers.SenseHatDevice.GetSensorData">
            <summary>
            Returns data from <see cref="F:MaszynaPi.SenseHatHandlers.SenseHatDevice.ReadProcess"/> standard output parsed to float and casted into uint value.
            <br></br>Throws <see cref="T:MaszynaPi.SenseHatHandlers.SenseHatException"/> if parsing failed.
            </summary>
            <returns>uint representation of read from stdout stirng.</returns>
            <exception cref="T:MaszynaPi.SenseHatHandlers.SenseHatException"></exception>
        </member>
        <member name="M:MaszynaPi.SenseHatHandlers.SenseHatDevice.MatrixPrint(System.UInt32,System.String)">
            <summary>
            Starts new process of <see cref="F:MaszynaPi.SenseHatHandlers.SenseHatDevice.MATRIX_SCRIPT"/> with argumetns given in 
            <paramref name="value"/> and <paramref name="mode"/> parameters using <see cref="M:MaszynaPi.SenseHatHandlers.SenseHatDevice.SendData(System.String)"/> method.
            </summary>
            <param name="value">Value to be feed into <see cref="F:MaszynaPi.SenseHatHandlers.SenseHatDevice.MATRIX_SCRIPT"/> as first call argument.</param>
            <param name="mode">String to be feed into <see cref="F:MaszynaPi.SenseHatHandlers.SenseHatDevice.MATRIX_SCRIPT"/> as second call argument.</param>
        </member>
        <member name="F:MaszynaPi.SenseHatHandlers.SenseHatDevice.OnInterruptionReceived">
            <summary>
            Handler for <see cref="T:MaszynaPi.MachineLogic.CentralProcessingUnit"/> method that should be invoked on <see cref="F:MaszynaPi.SenseHatHandlers.SenseHatDevice.JOYSTICK_SCRIPT"/>
            data receive. Parameter of <see cref="T:System.Action"/> will be taking value translated from joystick positions into interruption 
            priority using <see cref="F:MaszynaPi.SenseHatHandlers.SenseHatDevice.JoystickPosIntMap"/>.
            </summary>
        </member>
        <member name="M:MaszynaPi.SenseHatHandlers.SenseHatDevice.StartAsyncRead">
            <summary>
            If app runing on <see cref="F:System.PlatformID.Unix"/>, creates new <see cref="T:System.ComponentModel.BackgroundWorker"/> instance (see <see cref="F:MaszynaPi.SenseHatHandlers.SenseHatDevice.AsyncRead"/>) that
            can report progress and supports cacelation. Assigns <see cref="M:MaszynaPi.SenseHatHandlers.SenseHatDevice.AsyncRead_DoWork(System.Object,System.ComponentModel.DoWorkEventArgs)"/> 
            into <see cref="E:System.ComponentModel.BackgroundWorker.DoWork"/> event handler and runs asynchornus operation.
            <br></br>Throws <see cref="T:MaszynaPi.SenseHatHandlers.SenseHatException"/> if <see cref="F:MaszynaPi.SenseHatHandlers.SenseHatDevice.ReadProcess"/> is not created before calling this method.
            </summary>
            <exception cref="T:MaszynaPi.SenseHatHandlers.SenseHatException"></exception>
        </member>
        <member name="M:MaszynaPi.SenseHatHandlers.SenseHatDevice.StopAsyncRead(System.TimeSpan)">
            <summary>
            Stops asynchronus operation of reading data from <see cref="F:MaszynaPi.SenseHatHandlers.SenseHatDevice.JOYSTICK_SCRIPT"/> using <see cref="F:MaszynaPi.SenseHatHandlers.SenseHatDevice.ReadProcess"/>/.
            If <see cref="F:MaszynaPi.SenseHatHandlers.SenseHatDevice.ReadProcess"/> or <see cref="F:MaszynaPi.SenseHatHandlers.SenseHatDevice.AsyncRead"/> is null, returns without taking any actions.
            Throws <see cref="T:System.Exception"/> if reated <see cref="P:System.ComponentModel.BackgroundWorker.IsBusy"/> after <paramref name="cancelTimeout"/>. 
            </summary>
            <param name="cancelTimeout"></param>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:MaszynaPi.SenseHatHandlers.SenseHatDevice.AsyncRead_DoWork(System.Object,System.ComponentModel.DoWorkEventArgs)">
            <summary>
            <see cref="F:MaszynaPi.SenseHatHandlers.SenseHatDevice.AsyncRead"/> <see cref="E:System.ComponentModel.BackgroundWorker.DoWork"/> event handler. 
            Starts <see cref="F:MaszynaPi.SenseHatHandlers.SenseHatDevice.ReadProcess"/> and reads data from <see cref="P:System.Diagnostics.Process.StandardOutput"/> until 
            <see cref="P:System.ComponentModel.BackgroundWorker.CancellationPending"/> is false. After that, kills <see cref="F:MaszynaPi.SenseHatHandlers.SenseHatDevice.ReadProcess"/>.
            </summary>
            <param name="sender">Not used.</param>
            <param name="e">Provides data for handler.</param>
        </member>
        <member name="M:MaszynaPi.SenseHatHandlers.SenseHatDevice.DataReceived(System.Object,System.Diagnostics.DataReceivedEventArgs)">
            <summary>
            <see cref="F:MaszynaPi.SenseHatHandlers.SenseHatDevice.ReadProcess"/>, <see cref="E:System.Diagnostics.Process.OutputDataReceived"/> event.
            Assings <see cref="P:System.Diagnostics.DataReceivedEventArgs.Data"/> to <see cref="F:MaszynaPi.SenseHatHandlers.SenseHatDevice.ReceivedData"/> field.
            </summary>
            <param name="sender">Not used.</param>
            <param name="e">Provides data from event handler.</param>
        </member>
        <member name="M:MaszynaPi.SenseHatHandlers.SenseHatDevice.ErrorReceived(System.Object,System.Diagnostics.DataReceivedEventArgs)">
            <summary>
            <b>Currently no action performed</b> due do python scripts writing irrelevant warnings into error stream.
            Disards all <see cref="P:System.Diagnostics.Process.StandardError"/> communicates.
            </summary>
            <param name="sender">Not used.</param>
            <param name="e">Provides data from event handler.</param>
        </member>
        <member name="F:MaszynaPi.ArchitectureRadioButton.components">
            <summary> 
            Wymagana zmienna projektanta.
            </summary>
        </member>
        <member name="M:MaszynaPi.ArchitectureRadioButton.Dispose(System.Boolean)">
            <summary> 
            Wyczyść wszystkie używane zasoby.
            </summary>
            <param name="disposing">prawda, jeżeli zarządzane zasoby powinny zostać zlikwidowane; Fałsz w przeciwnym wypadku.</param>
        </member>
        <member name="M:MaszynaPi.ArchitectureRadioButton.InitializeComponent">
            <summary> 
            Metoda wymagana do obsługi projektanta — nie należy modyfikować 
            jej zawartości w edytorze kodu.
            </summary>
        </member>
        <member name="F:MaszynaPi.ComponentsCheckBox.components">
            <summary> 
            Wymagana zmienna projektanta.
            </summary>
        </member>
        <member name="M:MaszynaPi.ComponentsCheckBox.Dispose(System.Boolean)">
            <summary> 
            Wyczyść wszystkie używane zasoby.
            </summary>
            <param name="disposing">prawda, jeżeli zarządzane zasoby powinny zostać zlikwidowane; Fałsz w przeciwnym wypadku.</param>
        </member>
        <member name="M:MaszynaPi.ComponentsCheckBox.InitializeComponent">
            <summary> 
            Metoda wymagana do obsługi projektanta — nie należy modyfikować 
            jej zawartości w edytorze kodu.
            </summary>
        </member>
        <member name="T:MaszynaPi.Form1">
            <summary>Application main <see cref="T:System.Windows.Forms.Form"/>, handling CPU, IOs and Editors views. </summary>
        </member>
        <member name="F:MaszynaPi.Form1.CPUProgramExecuting">
            <summary>Indicates that <see cref="M:MaszynaPi.MachineLogic.CentralProcessingUnit.ExecuteProgram"/> was called.</summary>
        </member>
        <member name="F:MaszynaPi.Form1.PaintActiveSignals">
            <summary>Indicates that <see cref="T:MaszynaPi.Form1"/> should repaint all controls with <see cref="P:MaszynaPi.MachineUI.UserControlSignalWire.Active"/> field set.</summary>
        </member>
        <member name="F:MaszynaPi.Form1.LastUsedFilepath">
            <summary>Last path used in file-open/save operation.</summary>
        </member>
        <member name="F:MaszynaPi.Form1.MachineComponents">
            <summary>All CPU view <see cref="T:System.Windows.Forms.UserControl"/>s.</summary>
        </member>
        <member name="F:MaszynaPi.Form1.SignalWires">
            <summary>List of all <see cref="T:MaszynaPi.MachineUI.UserControlSignalWire"/> objects in CPU view.</summary>
        </member>
        <member name="M:MaszynaPi.Form1.#ctor">
            <summary>Creates application main <see cref="T:System.Windows.Forms.Form"/>.</summary>
        </member>
        <member name="M:MaszynaPi.Form1.SortSignals(System.Collections.Generic.List{System.String})">
            <summary>Sorts the microinstruction signals so that register output signals are always prioritized.</summary>
            <param name="activeSignals">List of signals names to be sorted.</param>
            <returns>Sorted list of signal names: output->transit->input->special signals.</returns>
        </member>
        <member name="M:MaszynaPi.Form1.GetManualActiveSignals">
            <summary>
            Machine manual control -> each <see cref="P:MaszynaPi.MachineUI.UserControlSignalWire.Active"/> signal adds its name to a list,
            which is then sorted (<see cref="M:MaszynaPi.Form1.SortSignals(System.Collections.Generic.List{System.String})"/>) and pass to the machine for execution
            using <see cref="M:MaszynaPi.MachineLogic.CentralProcessingUnit.ManualTick(System.Collections.Generic.List{System.String})"/> method.
            <br></br>Note: only "Tick" step possible with manual control enabled.
            </summary>
            <returns>List of names of signals activated by user, sored by <see cref="M:MaszynaPi.Form1.SortSignals(System.Collections.Generic.List{System.String})"/>.</returns>
        </member>
        <member name="F:MaszynaPi.Form1.components">
            <summary>
            Wymagana zmienna projektanta.
            </summary>
        </member>
        <member name="M:MaszynaPi.Form1.Dispose(System.Boolean)">
            <summary>
            Wyczyść wszystkie używane zasoby.
            </summary>
            <param name="disposing">prawda, jeżeli zarządzane zasoby powinny zostać zlikwidowane; Fałsz w przeciwnym wypadku.</param>
        </member>
        <member name="M:MaszynaPi.Form1.InitializeComponent">
            <summary>
            Metoda wymagana do obsługi projektanta — nie należy modyfikować
            jej zawartości w edytorze kodu.
            </summary>
        </member>
        <member name="F:MaszynaPi.FormProjectOptions.textBoxesINTAddr">
            <summary>Collection of <see cref="T:System.Windows.Forms.TextBox"/>es containing interruption handlers adresses.</summary>
        </member>
        <member name="F:MaszynaPi.FormProjectOptions.ONLY_PATHS">
            <summary>Indicates that only <see cref="F:MaszynaPi.FormProjectOptions.tabPagePaths"/> should be shown.</summary>
        </member>
        <member name="M:MaszynaPi.FormProjectOptions.#ctor(System.Boolean)">
            <summary>Creates new <see cref="T:System.Windows.Forms.Form"/>, with editable application settings.</summary>
            <param name="onlyPaths">Collection of <see cref="T:System.Windows.Forms.TextBox"/>es containing interruption handlers adresses.</param>
        </member>
        <member name="F:MaszynaPi.FormProjectOptions.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MaszynaPi.FormProjectOptions.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MaszynaPi.FormProjectOptions.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:MaszynaPi.MachineAssembler.Assembler">
            <summary>
            Class responsible for compilation - 
            changing the string from the Code Editor to a form understandable for the machine.
            In this case, list of numbers as (opcode shifted left by addressBits bitwaise anded with argument) 
            
            Compiler uses the static class InstructionSetDecoder - instructions opcodes are  
            identified by searching for them in the opcode map (Dictionary InstructionNames) 
            The code is stored in two versions: 
            <br></br>    1. Loaded as numbers into memory            [List of uints]
            <br></br>    2. Translated into a sequence of signals    [List of Lists of strings][OLD - UNUSED] 
            </summary>
        </member>
        <member name="M:MaszynaPi.MachineAssembler.Assembler.DeleteMultipleSpaces(System.String)">
            <summary>Replaces all multi-spaces instances with single space character.</summary>
            <param name="s">Input string</param>
            <returns>New, processed string with single spaces.</returns>
        </member>
        <member name="M:MaszynaPi.MachineAssembler.Assembler.IsMemoryAlocation(System.String)">
            <summary>Checks if passed <paramref name="line"/> contais <see cref="P:MaszynaPi.Defines.KEYWORD_MEM_ALLOC"/> value. </summary>
        </member>
        <member name="M:MaszynaPi.MachineAssembler.Assembler.IsConstDeclaration(System.String)">
            <summary>Checks if passed <paramref name="line"/> contais <see cref="P:MaszynaPi.Defines.KEYWORD_CONST_VAR"/> value. </summary>
        </member>
        <member name="M:MaszynaPi.MachineAssembler.Assembler.GetLableName(System.String)">
            <summary>Returns label of variable component of line.</summary>
        </member>
        <member name="M:MaszynaPi.MachineAssembler.Assembler.RemoveLabels(System.Collections.Generic.List{System.String})">
            <summary>Modifies <paramref name="codeLines"/> argument to not contain labels in any line </summary>
        </member>
        <member name="M:MaszynaPi.MachineAssembler.Assembler.GetProgramSize(System.Collections.Generic.List{System.String})">
            <summary>
            Returns expected program size after compilation - sum of lines, declarations
            <b>(works properly if codeLines were get from CodeEditor().proccessCode() method)</b>
            </summary>
            <param name="codeLines">Processed lines of code.</param>
            <returns>Program size as number of words (size of word: <see cref="M:MaszynaPi.MachineLogic.ArchitectureSettings.GetWordBits"/>).</returns>
        </member>
        <member name="M:MaszynaPi.MachineAssembler.Assembler.GetLabelsAddresses(System.Collections.Generic.List{System.String})">
            <summary>
            Gets adressses for Procedures, Variables and Constans Labels and loads them into
            dictionary where <see cref="P:System.Collections.Generic.Dictionary`2.Keys"/> are Names Of Labels and <see cref="P:System.Collections.Generic.Dictionary`2.Values"/> are Addresses.
            </summary>
            <param name="codeLines">Processed lines of code.</param>
            <returns>Created <see cref="T:System.Collections.Generic.Dictionary`2"/> filled with asseembly components adresses.</returns>
            <exception cref="T:MaszynaPi.MachineAssembler.CompilerException"></exception>
        </member>
        <member name="M:MaszynaPi.MachineAssembler.Assembler.CompileCode(System.Collections.Generic.List{System.String})">
            <summary>Creates compiled program as list of unsigned integer values to be load into Machine memory</summary>
            <param name="codeLines">Processed lines of Machine assembly code.</param>
            <returns>Compiled to Machine Code program, ready to be loaded into memory. </returns>
            <exception cref="T:MaszynaPi.MachineAssembler.CompilerException"></exception>
        </member>
        <member name="T:MaszynaPi.MachineAssembler.Debugger">
            <summary>
            Class allows for mapping current machine state to specific lines of assembly code and microinstructions.
            </summary>
        </member>
        <member name="F:MaszynaPi.MachineAssembler.Debugger.MemoryLineNumberMap">
            <summary>
            Dictionary of pairs (memory_address - number of code line in editor)  
            </summary>
        </member>
        <member name="F:MaszynaPi.MachineAssembler.Debugger.CodeLinesHandle">
            <summary>
            List of all lines of code from editor.
            </summary>
        </member>
        <member name="F:MaszynaPi.MachineAssembler.Debugger.OnSetExecutedLine">
            <summary>
            Action that should be performed when <see cref="T:MaszynaPi.MachineAssembler.Debugger"/> calculates current line. 
            Assembly Code string index is passed and contents of line that is execuded.
            </summary>
        </member>
        <member name="F:MaszynaPi.MachineAssembler.Debugger.OnSetExecutedMicroinstructions">
            <summary>
            Action that should be performed when <see cref="T:MaszynaPi.MachineAssembler.Debugger"/> calculates current instruction's micrinstruction signals. 
            Instruction opcode and list of active microinstructions signals names are passed.
            </summary>
        </member>
        <member name="M:MaszynaPi.MachineAssembler.Debugger.#ctor">
            <summary> Creates <see cref="T:MaszynaPi.MachineAssembler.Debugger"/> instance. </summary>
        </member>
        <member name="M:MaszynaPi.MachineAssembler.Debugger.ClearMemoryEditorMap">
            <summary>Clears <see cref="F:MaszynaPi.MachineAssembler.Debugger.MemoryLineNumberMap"/> dictionary.</summary>
        </member>
        <member name="M:MaszynaPi.MachineAssembler.Debugger.SetCodeEditorHandle(System.Collections.Generic.List{System.String})">
            <summary>
            Assigns instance of List of code lines into internal <see cref="F:MaszynaPi.MachineAssembler.Debugger.CodeLinesHandle"/>.
            </summary>
            <param name="handle">List object containing current assembly code.</param>
        </member>
        <member name="M:MaszynaPi.MachineAssembler.Debugger.FindLineNumber(System.UInt32,System.String)">
            <summary>
            Gets 0 based index of nearest line (forward from 'start' praram) which contains specific string (invariant characers case)
            in <see cref="F:MaszynaPi.MachineAssembler.Debugger.CodeLinesHandle"/> list.
            </summary>
            <param name="start">Number of line from which search should be started.</param>
            <param name="content">Substring to be found in code lines.</param>
            <returns>0 based number of found line, -1 if not found.</returns>
        </member>
        <member name="M:MaszynaPi.MachineAssembler.Debugger.FillMemoryLineNumberMap">
            <summary>
            Fills <see cref="F:MaszynaPi.MachineAssembler.Debugger.MemoryLineNumberMap"/> with memory word adress corresponding to number of code line.
            To be called after compilation. 
            </summary>
        </member>
        <member name="M:MaszynaPi.MachineAssembler.Debugger.GetFirstCharIndexFromLine(System.Int32)">
            <summary>
            Calculates index (where 0 is first characted of first element in <see cref="F:MaszynaPi.MachineAssembler.Debugger.CodeLinesHandle"/>) 
            of first character in given line.
            </summary>
            <param name="lineindex">Index of line for which total leading characters number will be calculated.</param>
            <returns>Number of total leading characters before first character of given <see cref="F:MaszynaPi.MachineAssembler.Debugger.CodeLinesHandle"/>[<paramref name="lineindex"/>].</returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:MaszynaPi.MachineAssembler.Debugger.SetExecutedLine(System.UInt32)">
            <summary>
            Calls assigned <see cref="F:MaszynaPi.MachineAssembler.Debugger.OnSetExecutedLine"/> <see cref="T:System.Action"/> for passed executed <paramref name="memAddress"/> if 
            <see cref="F:MaszynaPi.MachineAssembler.Debugger.MemoryLineNumberMap"/> contais this address data and any code exist in assigned to<see cref="F:MaszynaPi.MachineAssembler.Debugger.CodeLinesHandle"/> list. 
            </summary>
            <param name="memAddress">In-Memory Address of currently executed instruction.</param>
        </member>
        <member name="M:MaszynaPi.MachineAssembler.Debugger.SetExecutedMicronstructions(System.UInt32,System.Collections.Generic.List{System.String})">
            <summary>
            Calls <see cref="T:System.Action"/> assigned to <see cref="F:MaszynaPi.MachineAssembler.Debugger.OnSetExecutedMicroinstructions"/> with passed in argument <paramref name="opcode"/>
            and list of <paramref name="activeSignals"/>.
            </summary>
            <param name="opcode">Opcode of currently execuded instruction.</param>
            <param name="activeSignals">List containing names of microinstructions active on current instruction.</param>
        </member>
        <member name="T:MaszynaPi.MachineAssembler.Editors.CodeEditor.Definition">
            <summary>Allows to precise if edited code is <see cref="F:MaszynaPi.MachineAssembler.Editors.CodeEditor.Definition.Instruction"/> or <see cref="F:MaszynaPi.MachineAssembler.Editors.CodeEditor.Definition.Program"/></summary>
        </member>
        <member name="M:MaszynaPi.MachineAssembler.Editors.CodeEditor.DetectCodeType(MaszynaPi.MachineAssembler.Editors.CodeEditor.Definition)">
            <summary>
            Returns type of code that <see cref="F:MaszynaPi.MachineAssembler.Editors.CodeEditor.CodeLines"/> contains. Each occurence of specific <see cref="T:MaszynaPi.MachineAssembler.Editors.CodeEditor.Definition"/>
            keyword gives it a point. If equal amout of points is given, <paramref name="draw"/> value is assumed.
            Before analyzing, copy of <see cref="F:MaszynaPi.MachineAssembler.Editors.CodeEditor.CodeLines"/> is made and all standarization processing are made on it.
            Method does not affect content of original list. 
            <br></br>Note: if both probabilites points are equal to 0, <see cref="F:MaszynaPi.MachineAssembler.Editors.CodeEditor.Definition.Unknown"/> is returned.
            </summary>
            <param name="draw">Value to be returned if probablity of each code type is the same (except if it is 0).</param>
            <returns>Assumed <see cref="T:MaszynaPi.MachineAssembler.Editors.CodeEditor.Definition"/> type of code from <see cref="F:MaszynaPi.MachineAssembler.Editors.CodeEditor.CodeLines"/>.</returns>
        </member>
        <member name="T:MaszynaPi.MachineAssembler.InstructionLoaderException">
            <summary>
            Generic <see cref="T:System.Exception"/> overload, for throwing errors related to <see cref="T:MaszynaPi.MachineAssembler.InstructionLoader"/> class.
            </summary>
        </member>
        <member name="T:MaszynaPi.MachineAssembler.InstructionLoader">
            <summary>
            Class providing methods for parsing Instruction files, written in .ini-like format.
            Syntax of instruction set files was preserved to assure backward compability with previous simulator application.
            </summary>
        </member>
        <member name="F:MaszynaPi.MachineAssembler.InstructionLoader.uInstDefKeywords">
            <summary> List of keywords for microinstruction definition pseoudo-language </summary>
        </member>
        <member name="F:MaszynaPi.MachineAssembler.InstructionLoader.InstructionsLines">
            <summary> Mapping of instruction names to their uOps definitions (lines from file, used for <see cref="T:MaszynaPi.MachineUI.UserControlInstructionMicrocode"/>)</summary>
        </member>
        <member name="F:MaszynaPi.MachineAssembler.InstructionLoader.InstructionsNamesOpcodes">
            <summary> Mapping Instructions names to their opcodes (as unsigned integers). </summary>
        </member>
        <member name="F:MaszynaPi.MachineAssembler.InstructionLoader.InstructionsSignalsMap">
            <summary> Mapping Instructions names to list of lists of their's uOps signals (each list of uops defines set of them than can be executed in single clock cycle)</summary>
        </member>
        <member name="F:MaszynaPi.MachineAssembler.InstructionLoader.ZeroArgInstructions">
            <summary> Names of instructions that takes no arguments.</summary>
        </member>
        <member name="M:MaszynaPi.MachineAssembler.InstructionLoader.GetAvaibleInstructionsNames">
            <summary>
            Creates list of names of all avaible (loaded/declared) instructions 
            (NOT considering the currently set code bits value - returned instruction count might be larger than maximum that can be encoded
            with currently set opcode bit size).
            </summary>
            <returns>List of strings, where each element is name of one of all avaible instruction.</returns>
        </member>
        <member name="M:MaszynaPi.MachineAssembler.InstructionLoader.LoadBaseInstructions">
            <summary>
            Method loads base instructions set, using instructions defined in <see cref="P:MaszynaPi.Properties.Resources.Podstawa"/> or <see cref="P:MaszynaPi.Properties.Resources.Base"/>
            (dependins on currently set <see cref="P:MaszynaPi.Defines.LangInUse"/> language). Uses <see cref="M:MaszynaPi.MachineAssembler.InstructionLoader.LoadInstructionSet(System.Collections.Generic.List{System.String})"/> method.
            </summary>
            <returns>'true' if all instructions could be encoded using currently set size of opcode (<see cref="M:MaszynaPi.MachineLogic.ArchitectureSettings.GetMaxOpcode"/>), false otherwise.</returns>
            <exception cref="T:MaszynaPi.MachineAssembler.InstructionLoaderException"></exception>
        </member>
        <member name="M:MaszynaPi.MachineAssembler.InstructionLoader.LoadInstructionsFromFileContent(System.String)">
            <summary>
            Loads new set of instructions basing on provided instruction file content (<paramref name="instructions"/>).
            Uses <see cref="M:MaszynaPi.MachineAssembler.InstructionLoader.LoadInstructionSet(System.Collections.Generic.List{System.String})"/> method.
            </summary>
            <param name="instructions">Contents of <see cref="F:MaszynaPi.Defines.INSTRUCTION_FILE_EXTENSION"/> instruction set file.</param>
            <returns>'true' if all instructions could be encoded using currently set size of opcode (<see cref="M:MaszynaPi.MachineLogic.ArchitectureSettings.GetMaxOpcode"/>), false otherwise.</returns>
            <exception cref="T:MaszynaPi.MachineAssembler.InstructionLoaderException"></exception>
        </member>
        <member name="M:MaszynaPi.MachineAssembler.InstructionLoader.LoadSingleInstructionFromFileContent(System.String)">
            <summary> Allows to load single instruction using passed file's content <paramref name="instructions"/> as insturction definition source. </summary>
            <param name="instructions">Contents of <see cref="F:MaszynaPi.Defines.INSTRUCTION_FILE_EXTENSION"/> file containing definition of single instruction.</param>
            <returns>'true' if new instruction can be encoded with currently set size of opcode, 'false' otherwise. </returns>
            <exception cref="T:MaszynaPi.MachineAssembler.InstructionLoaderException"></exception>
        </member>
        <member name="M:MaszynaPi.MachineAssembler.InstructionLoader.GetInstructionsLines">
            <returns> Mapping of instruction names to their uOps definitions (lines from file, used for <see cref="T:MaszynaPi.MachineUI.UserControlInstructionMicrocode"/>)</returns>
        </member>
        <member name="M:MaszynaPi.MachineAssembler.InstructionLoader.GetInstructionsNamesOpcodes">
            <returns> Mapping Instructions names to their opcodes (as unsigned integers). </returns>
        </member>
        <member name="M:MaszynaPi.MachineAssembler.InstructionLoader.GetInstructionSignalsMap">
            <returns> Mapping Instructions names to list of lists of their's uOps signals (each list of uops defines set of them than can be executed in single clock cycle)</returns>
        </member>
        <member name="M:MaszynaPi.MachineAssembler.InstructionLoader.GetZeroArgInstructions">
            <returns> Names of instructions that takes no arguments.</returns>
        </member>
        <member name="M:MaszynaPi.MachineAssembler.InstructionLoader.SetOptions(System.Collections.Generic.List{System.String})">
            <summary>
            Sets related <see cref="T:MaszynaPi.MachineLogic.ArchitectureSettings"/> fields (AddressSpace, CodeBits) according to <see cref="F:MaszynaPi.Defines.OPTIONS_HEADER"/> section content. 
            </summary>
            <param name="options">Part of <see cref="F:MaszynaPi.Defines.INSTRUCTION_SET_FILE_EXTENSION"/> file containing <see cref="F:MaszynaPi.Defines.OPTIONS_HEADER"/> section.</param>
            <exception cref="T:MaszynaPi.MachineAssembler.InstructionLoaderException"></exception>
        </member>
        <member name="M:MaszynaPi.MachineAssembler.InstructionLoader.ClearLoadedInstructions">
            <summary> Clears all lists containing loaded instruction set information; instruction definitions, opcoded, and uOps.</summary>
        </member>
        <member name="M:MaszynaPi.MachineAssembler.InstructionLoader.IsValidStartOfInstruction(System.Collections.Generic.List{System.String})">
            <summary>Checks if instruction starts with valid set of fetch microoperations.</summary>
            <param name="uOpsLine">Single clock cycle set of microoperations from insturction definition.</param>
            <returns>'true' if passed instruction definition part contains valid fetch sequence (defined in <see cref="P:MaszynaPi.Defines.FETCH_SIGNALS"/>).</returns>
        </member>
        <member name="M:MaszynaPi.MachineAssembler.InstructionLoader.IsStatementValid(System.Collections.Generic.List{System.String})">
            <summary> Checks if conditional statement written in instruction definition language has valid syntax. </summary>
            <param name="sigline">List of statements from single line of instruction definition.</param>
            <returns>'true' if it is not a conditional statement or statemets passed in parameter are in valid order (if [arg] then @label else @label || if [arg] then @label) </returns>
        </member>
        <member name="M:MaszynaPi.MachineAssembler.InstructionLoader.StandarizeLines(System.Collections.Generic.List{System.String})">
            <summary>Removes all null or white space elements from <paramref name="lines"/> and converts all strings to lowercase. </summary>
            <param name="lines">Instruction definition text, splitted into lines.</param>
            <returns>New standarized List instance.</returns>
        </member>
        <member name="M:MaszynaPi.MachineAssembler.InstructionLoader.ChangeCapitalizationOfInstructionDefinitionKeywords(System.Boolean)">
            <summary>
            Changes capitalization specific words defined in <see cref="F:MaszynaPi.MachineAssembler.InstructionLoader.uInstDefKeywords"/> to upper (if <paramref name="toUpper"/> == true) or lower.
            <br></br>Used mainly for displaing avaible instructions definitions in <see cref="T:MaszynaPi.MachineUI.UserControlInstructionMicrocode"/>.
            </summary>
            <param name="toUpper">
            Set to 'true' (default) to capitalize instruction definition keywords using <see cref="M:System.String.ToUpper"/> method,
            'false' to perform <see cref="M:System.String.ToLower"/>.
            </param>
        </member>
        <member name="M:MaszynaPi.MachineAssembler.InstructionLoader.LoadInstructionSet(System.Collections.Generic.List{System.String})">
            <summary>
            Parses passed in <paramref name="lines"/> content of <see cref="F:MaszynaPi.Defines.INSTRUCTION_SET_FILE_EXTENSION"/> file, and fills specific instruction mappings/lists acordingly.
            <br></br>Creates new instances for:
            <br></br> - <see cref="F:MaszynaPi.MachineAssembler.InstructionLoader.InstructionsLines"/>
            <br></br> - <see cref="F:MaszynaPi.MachineAssembler.InstructionLoader.InstructionsSignalsMap"/>
            <br></br> - <see cref="F:MaszynaPi.MachineAssembler.InstructionLoader.InstructionsNamesOpcodes"/>
            <br></br> - <see cref="F:MaszynaPi.MachineAssembler.InstructionLoader.ZeroArgInstructions"/>
            <br></br>
            Throws <see cref="T:MaszynaPi.MachineAssembler.InstructionLoaderException"/> if parsing fails.
            </summary>
            <param name="lines">Contents of <see cref="F:MaszynaPi.Defines.INSTRUCTION_SET_FILE_EXTENSION"/> file in form of list of its lines (splitted by new line symbol(s) content of .lst file)</param>
            <returns>'true' if all instructions could be encoded using currently set size of opcode (<see cref="M:MaszynaPi.MachineLogic.ArchitectureSettings.GetMaxOpcode"/>), false otherwise.</returns>
            <exception cref="T:MaszynaPi.MachineAssembler.InstructionLoaderException"></exception>
        </member>
        <member name="M:MaszynaPi.MachineAssembler.InstructionLoader.DeleteComment(System.String)">
            <summary> If <paramref name="line"/> contains <see cref="F:MaszynaPi.Defines.COMMENT"/> substring, deletes all characters after that symbol (including it).</summary>
            <param name="line">Line that contiains potential valid comment.</param>
            <returns>New <see cref="T:System.String"/> instance wihout potential comment substring, or original <paramref name="line"/> if it did not contain any comment.</returns>
        </member>
        <member name="M:MaszynaPi.MachineAssembler.InstructionLoader.LoadSingleInstruction(System.Collections.Generic.List{System.String})">
            <summary>
            Adds single instruction into existing instruction set. <br></br>
            Throws <see cref="T:MaszynaPi.MachineAssembler.InstructionLoaderException"/> if instruciton parsing failed.
            </summary>
            <param name="lines">List of lines containing definition of single instruction.</param>
            <returns>'true' if new instruction can be encoded with currently set size of opcode, 'false' otherwise. </returns>
            <exception cref="T:MaszynaPi.MachineAssembler.InstructionLoaderException"></exception>
        </member>
        <member name="M:MaszynaPi.Program.Main">
            <summary>
            Main entry.
            </summary>
        </member>
        <member name="T:MaszynaPi.Defines">
            <summary>
            Static class, containing public constans values, allowing easy defining/modification application-specific 'assumption' values. 
            <br></br><u><b>Note:</b> Selected standard is to store all string values in lowercase!</u>
            </summary>
        </member>
        <member name="F:MaszynaPi.Defines.CODE_BITS_MIN">
            <summary>Minimal size (in bits) of machine's WORD opcode part (restriction for setting via UI).</summary>
        </member>
        <member name="F:MaszynaPi.Defines.CODE_BITS_MAX">
            <summary>Maximum size (in bits) of machine's WORD opcode part (restriction for setting via UI).</summary>
        </member>
        <member name="F:MaszynaPi.Defines.ADDRESS_BITS_MIN">
            <summary>Minimum size (in bits) of address space (restriction for setting via UI).</summary>
        </member>
        <member name="F:MaszynaPi.Defines.ADDRESS_BITS_MAX">
            <summary>Maximum size (in bits) of address space (restriction for setting via UI).</summary>
        </member>
        <member name="F:MaszynaPi.Defines.DEFAULT_CODE_BITS">
            <summary> Default number of bits used as opcode part of machine's WORD.</summary>
        </member>
        <member name="F:MaszynaPi.Defines.DEFAULT_ADDR_BITS">
            <summary> Default number of bits used as address part of machine's WORD.</summary>
        </member>
        <member name="F:MaszynaPi.Defines.DEFAULT_MEM_VAL">
            <summary> Default value of <see cref="F:MaszynaPi.MachineLogic.Architecture.Memory.Content"/> element.</summary>
        </member>
        <member name="F:MaszynaPi.Defines.DEFAULT_REG_VAL">
            <summary> Default value of <see cref="F:MaszynaPi.MachineLogic.Architecture.Register.Value"/> field.</summary>
        </member>
        <member name="F:MaszynaPi.Defines.DEFAULT_BUS_VAL">
            <summary> Default value of <see cref="F:MaszynaPi.MachineLogic.Architecture.Bus.Value"/> field.</summary>
        </member>
        <member name="F:MaszynaPi.Defines.DEFAULT_ALU_VAL">
            <summary> Default value of <see cref="F:MaszynaPi.MachineLogic.Architecture.Register.Value"/> field inside <see cref="F:MaszynaPi.MachineLogic.Architecture.ArithmeticLogicUnit.AK"/> register.</summary>
        </member>
        <member name="F:MaszynaPi.Defines.RB_REG_BIT_SIZE">
            <summary> Hardcoded size (in bits) of <see cref="P:MaszynaPi.MachineLogic.CentralProcessingUnit.RB"/> register.</summary>
        </member>
        <member name="F:MaszynaPi.Defines.G_REG_BIT_SIZE">
            <summary> Hardcoded size (in bits) of <see cref="P:MaszynaPi.MachineLogic.CentralProcessingUnit.G"/> register.</summary>
        </member>
        <member name="F:MaszynaPi.Defines.DEFAULT_IO_NUMBER">
            <summary>Number of IO devices wihout <see cref="F:MaszynaPi.Defines.Components.ExtendedIO"/> mode enabled.</summary>
        </member>
        <member name="F:MaszynaPi.Defines.EXTENDED_IO_NUMBER">
            <summary>Number of IO devices in <see cref="F:MaszynaPi.Defines.Components.ExtendedIO"/> mode (Excluding <see cref="F:MaszynaPi.Defines.DEFAULT_IO_NUMBER"/>).</summary>
        </member>
        <member name="F:MaszynaPi.Defines.INTERRUPTIONS_NUM">
            <summary>Amout of possible interruptions sources.</summary>
        </member>
        <member name="F:MaszynaPi.Defines.MAX_ALU_FLAG_VALUE">
            <summary>Maximum value that can be set using single <see cref="T:MaszynaPi.MachineLogic.Architecture.ALUFlags"/> enumeration.</summary>
        </member>
        <member name="T:MaszynaPi.Defines.Architecture">
            <summary> Enum represent different Machine architectures -> they are encoded as the bitwise AND of their base <see cref="T:MaszynaPi.Defines.Components"/>.
            <br></br><see cref="F:MaszynaPi.Defines.Architecture.MachinePI"/> implementation was subject of this application's extension over original simulator.</summary>
        </member>
        <member name="F:MaszynaPi.Defines.DEFAULT_ARCHITECTURE">
            <summary> Default <see cref="T:MaszynaPi.Defines.Architecture"/> mode, used when applicaiton is started.</summary>
        </member>
        <member name="T:MaszynaPi.Defines.Components">
            <summary>
            Flag typed enumeration, representing whole set of implemented Machine components.
            <br></br><see cref="F:MaszynaPi.Defines.Components.ExtendedIO"/> implementaton was subject of this application's extension over original simulator.
            </summary>
        </member>
        <member name="F:MaszynaPi.Defines.ALU_FLAG_Z">
            <summary> Instruction-definition-language keyword representing ALU's 'sign' bit flag.</summary>
        </member>
        <member name="F:MaszynaPi.Defines.ALU_FLAG_V">
            <summary> Instruction-definition-language keyword representing ALU's 'value' flag.</summary>
        </member>
        <member name="F:MaszynaPi.Defines.ALU_FLAG_INT">
            <summary> Instruction-definition-language keyword representing ALU's 'interrupt' flag.</summary>
        </member>
        <member name="F:MaszynaPi.Defines.ALU_FLAG_ZAK">
            <summary> Instruction-definition-language keyword representing ALU's 'zero' flag.</summary>
        </member>
        <member name="F:MaszynaPi.Defines.JOYSTICK_INTERRUPTS">
            <summary> Hardcoded pirority of interrrupts from different joystick movements (refers to <see cref="F:MaszynaPi.Defines.Architecture.MachinePI"/> architecture).</summary>
        </member>
        <member name="F:MaszynaPi.Defines.SIGNAL_LABEL_PREFIX">
            <summary> Instruction-definition-language label prefix character.</summary>
        </member>
        <member name="F:MaszynaPi.Defines.STATMENT_ARG_POSITION">
            <summary> Position of argument (after space string split) in conditional statement syntax in instruction-definition-language.</summary>
        </member>
        <member name="F:MaszynaPi.Defines.ADDRESS_SPACE_HEADER">
            <summary>Value header from .lst instruction set file defining neccessary address space for defined set. Preserved for backward compability.</summary>
        </member>
        <member name="F:MaszynaPi.Defines.CODE_BITS_HEADER">
            <summary>Value header from .lst instruction set file defining neccessary instruction opcode size for defined set. Preserved for backward compability.</summary>
        </member>
        <member name="F:MaszynaPi.Defines.INSTRUCTIONS_HEADER">
            <summary>Instructions Section header from .lst instruction set file. Preserved for backward compability.</summary>
        </member>
        <member name="F:MaszynaPi.Defines.OPTIONS_HEADER">
            <summary>Architecture Options Section header from .lst instruction set file. Preserved for backward compability.</summary>
        </member>
        <member name="F:MaszynaPi.Defines.INSTRUCTION_NUMBER_HEADER">
            <summary>Value header from .lst instruction set file defining consecutive index of single instruction in defined set. Preserved for backward compability.</summary>
        </member>
        <member name="F:MaszynaPi.Defines.INSTRUCTION_LINES_HEADER">
            <summary>Value header from .lst instruction set file defining amount of lines that instruction definition contains. Equals amount of neccessary cycles to execute. Preserved for backward compability.</summary>
        </member>
        <member name="F:MaszynaPi.Defines.LINE_END">
            <summary>Neccessary sufix indicating ending of line in instruction definition.</summary>
        </member>
        <member name="F:MaszynaPi.Defines.PROGRAM_FILE_EXTENSION">
            <summary>Standard extension of Machine Assembly Program file.</summary>
        </member>
        <member name="F:MaszynaPi.Defines.INSTRUCTION_FILE_EXTENSION">
            <summary>Standard extension of Instruction Set Definition file.</summary>
        </member>
        <member name="F:MaszynaPi.Defines.INSTRUCTION_SET_FILE_EXTENSION">
            <summary>Standard extension of Single Instruction Definition file.</summary>
        </member>
        <member name="F:MaszynaPi.Defines.COMMENT">
            <summary>Assembly comment symbol.</summary>
        </member>
        <member name="P:MaszynaPi.Defines.BASE_INSTRUCTION_SET_FILENAME">
            <summary> Name of file containing definition of instruction set that will be loaded as on application startup. </summary>
        </member>
        <member name="P:MaszynaPi.Defines.FETCH_SIGNALS">
            <summary> List of signals (<i>microinstructions</i>) used to fetch instruciton from memory
            (those remains always the same, becaouse fetch cycle uops do not depends on which instruction being executed).</summary>
        </member>
        <member name="P:MaszynaPi.Defines.KEYWORD_MEM_ALLOC">
            <summary> Defines assembly keyword for allocating word-sized part of memory to use as variable.</summary>
        </member>
        <member name="P:MaszynaPi.Defines.KEYWORD_CONST_VAR">
            <summary> Defines assembly keyword for defining referable constant (value written into program data segment after compilation)</summary>
        </member>
        <member name="P:MaszynaPi.Defines.SIGNAL_TEST_IO_READY">
            <summary> Instruction-definition-language keyword, used when checking if IO device signalized ready state.</summary>
        </member>
        <member name="P:MaszynaPi.Defines.SIGNAL_STATEMENT_IF">
            <summary> Instruction-definition-language keyword, defining 'IF' part of conditional (if-then-else-end)  statement.</summary>
        </member>
        <member name="P:MaszynaPi.Defines.SIGNAL_STATEMENT_THEN">
            <summary> Instruction-definition-language keyword, defining 'THEN' part of conditional (if-then-else-end)  statement.</summary>
        </member>
        <member name="P:MaszynaPi.Defines.SIGNAL_STATEMENT_ELSE">
            <summary> Instruction-definition-language keyword, defining 'ELSE' part of conditional (if-then-else-end) statement.</summary>
        </member>
        <member name="P:MaszynaPi.Defines.SIGNAL_STATEMENT_END">
            <summary> Instruction-definition-language keyword, defining 'END' part of conditional (if-then-else-end) statement.</summary>
        </member>
        <member name="P:MaszynaPi.Defines.INSTRUCTION_ARGSNUM_HEADER">
            <summary>Reffers to instruction set definition (*.lst) file's segment, that marks definition of number of arguments that instruction takes.
            <br></br>Note: For standarization purposes, assigned string <u>should end with space character!</u></summary>
        </member>
        <member name="P:MaszynaPi.Defines.INSTRUCTION_NAME_HEADER">
            <summary>Reffers to instruction set definition (*.lst) or instruction definition (*.rzk) file's segment,
            that marks definition of instruction name. 
            <br></br>Note: For standarization purposes, assigned string <u>should end with space character!</u></summary>
        </member>
        <member name="T:MaszynaPi.Defines.Lang">
            <summary> Represents supproted languages version of application, (affects assembly and micrioinstructions code syntax). </summary>
        </member>
        <member name="F:MaszynaPi.Defines.Lang.PL">
            <summary>Polish</summary>
        </member>
        <member name="F:MaszynaPi.Defines.Lang.ENG">
            <summary>English</summary>
        </member>
        <member name="P:MaszynaPi.Defines.LangInUse">
            <summary> Stores language version curenntly in use. </summary>
        </member>
        <member name="M:MaszynaPi.Defines.SetInstructionsLanguageVersion(MaszynaPi.Defines.Lang)">
            <summary> Assigns each of 'static string' fields their <paramref name="lang"/>-specific value via private setter. </summary>
            <param name="lang"><see cref="T:MaszynaPi.Defines.Lang"/> enum to be used in programming syntax.</param>
        </member>
        <member name="M:MaszynaPi.Defines.#cctor">
            <summary> Static construction-like allows to invoke language specification method automatically on application startup. </summary>
        </member>
        <member name="T:MaszynaPi.Properties.Resources">
            <summary>
              Klasa zasobu wymagająca zdefiniowania typu do wyszukiwania zlokalizowanych ciągów itd.
            </summary>
        </member>
        <member name="P:MaszynaPi.Properties.Resources.ResourceManager">
            <summary>
            Zwraca buforowane wystąpienie ResourceManager używane przez tę klasę.
            </summary>
        </member>
        <member name="P:MaszynaPi.Properties.Resources.Culture">
            <summary>
              Przesłania właściwość CurrentUICulture bieżącego wątku dla wszystkich
              przypadków przeszukiwania zasobów za pomocą tej klasy zasobów wymagającej zdefiniowania typu.
            </summary>
        </member>
        <member name="P:MaszynaPi.Properties.Resources.Base">
             <summary>
             Wyszukuje zlokalizowany ciąg podobny do ciągu [Opcje]
            Połączenie=0
            Inkrementacja=0
            Logiczne=0
            Arytmetyczne=0
            Stos=0
            RejestrX=0
            RejestrY=0
            Przerwania=0
            Wejście=0
            Znaczniki=0
            Adres=5
            Kod=3
            [Rozkazy]
            Liczba=8
            Nazwa1=stp
            Nazwa2=add
            Nazwa3=sub
            Nazwa4=load
            Nazwa5=stor
            Nazwa6=jmp
            Nazwa7=blz
            Nazwa8=bez
            [stp]
            Linie=5
            Linia1=// zakończenie programu
            Linia2=INSTRUCTION STP;
            Linia3=Arguments 0;
            Linia4=rd od iins icit;
            Linia5=stop;
            [add]
            Linie=4
            Linia1=INSTRUCTION ADD;
            Linia2=rd od iins icit;
            Linia3=oa ia;
            Linia4=rd od ialu add iac [obcięto pozostałą część ciągu]&quot;;.
             </summary>
        </member>
        <member name="P:MaszynaPi.Properties.Resources.Podstawa">
             <summary>
             Wyszukuje zlokalizowany ciąg podobny do ciągu [Opcje]
            Połączenie=0
            Inkrementacja=0
            Logiczne=0
            Arytmetyczne=0
            Stos=0
            RejestrX=0
            RejestrY=0
            Przerwania=0
            Wejście=0
            Znaczniki=0
            Adres=5
            Kod=3
            [Rozkazy]
            Liczba=8
            Nazwa1=stp
            Nazwa2=dod
            Nazwa3=ode
            Nazwa4=pob
            Nazwa5=ład
            Nazwa6=sob
            Nazwa7=som
            Nazwa8=soz
            [stp]
            Linie=5
            Linia1=// zakończenie programu
            Linia2=ROZKAZ STP;
            Linia3=Argumenty 0;
            Linia4=czyt wys wei il;
            Linia5=stop;
            [dod]
            Linie=4
            Linia1=ROZKAZ DOD;
            Linia2=czyt wys wei il;
            Linia3=wyad wea;
            Linia4=czyt wys weja dod weak wyl  [obcięto pozostałą część ciągu]&quot;;.
             </summary>
        </member>
    </members>
</doc>
